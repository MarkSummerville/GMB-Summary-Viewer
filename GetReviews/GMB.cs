// Copyright 2010 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     Build date: 2018-10-08 17:45:39 UTC
//     on: 2019-04-18, 22:37:01 UTC
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \mainpage
 *   Google My Business API Version v4
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/my-business/'>Google My Business API</a>
 *      <tr><th>API Version<td>v4
 *      <tr><th>API Rev<td>0
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/my-business/'>
 *              https://developers.google.com/my-business/</a>
 *      <tr><th>Discovery Name<td>mybusiness
 *      <tr><th>Generated At<td>2019-04-18 22:37:01 UTC
 *      <tr><th>C# Generator<td>google-apis-code-generator
 *      <tr><th>Generator Version
 *          <td>1.5.1 / c#=1.10.0
 *      <tr><th>Generator Build<td>2018-10-08 17:45:39 UTC
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google My Business API can be found at
 * <a href='https://developers.google.com/my-business/'>https://developers.google.com/my-business/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.MyBusiness.v4.Data
{

    /// <summary>Request message for MyBusiness.AcceptInvitation.</summary>
    public class AcceptInvitationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An account is a container for your business's locations. If you are the only user who manages locations
    /// for your business, you can use your personal Google Account. To share management of locations with multiple
    /// users, [create a business account]
    /// (https://support.google.com/business/answer/6085339?ref_topic=6085325).</summary>
    public class Account : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the account. Note: For an account with AccountType `PERSONAL`, this is the first and
        /// last name of the user account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountName")]
        public virtual string AccountName { get; set; }

        /// <summary>Account reference number if provisioned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountNumber")]
        public virtual string AccountNumber { get; set; }

        /// <summary>The resource name, in the format `accounts/{account_id}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Additional info for an organization. This is populated only for an organization account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organizationInfo")]
        public virtual OrganizationInfo OrganizationInfo { get; set; }

        /// <summary>Output only. Specifies the PermissionLevel the caller has for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionLevel")]
        public virtual string PermissionLevel { get; set; }

        /// <summary>Profile photo for the account. This is populated only for the personal account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profilePhotoUrl")]
        public virtual string ProfilePhotoUrl { get; set; }

        /// <summary>Output only. Specifies the AccountRole the caller has for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>Output only. Indicates the AccountState of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual AccountState State { get; set; }

        /// <summary>Output only. Specifies the AccountType of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Indicates status of the account, such as whether the account has been verified by Google.</summary>
    public class AccountState : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If verified, future locations that are created are automatically connected to Google Maps, and have
        /// Google+ pages created, without requiring moderation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional information that is surfaced in AdWords.</summary>
    public class AdWordsLocationExtensions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An alternate phone number to display on AdWords location extensions instead of the location's
        /// primary phone number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adPhone")]
        public virtual string AdPhone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Input for ADDRESS verification.</summary>
    public class AddressInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Contact name the mail should be sent to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mailerContactName")]
        public virtual string MailerContactName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Display data for verifications through postcard.</summary>
    public class AddressVerificationData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Address that a postcard can be sent to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual PostalAddress Address { get; set; }

        /// <summary>Merchant's business name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("businessName")]
        public virtual string BusinessName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An administrator of an Account or a Location.</summary>
    public class Admin : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the admin. When making the initial invitation, this is the invitee's email address. On
        /// `GET` calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains
        /// the user's first and last names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adminName")]
        public virtual string AdminName { get; set; }

        /// <summary>The resource name. For account admins, this is in the form:
        /// `accounts/{account_id}/admins/{admin_id}`
        ///
        /// For location admins, this is in the form:
        /// `accounts/{account_id}/locations/{location_id}/admins/{admin_id}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. Indicates whether this admin has a pending invitation for the specified
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pendingInvitation")]
        public virtual System.Nullable<bool> PendingInvitation { get; set; }

        /// <summary>Specifies the AdminRole that this admin uses with the specified Account or Location
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an answer to a question</summary>
    public class Answer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The author of the answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual Author Author { get; set; }

        /// <summary>Output only. The timestamp for when the answer was written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; }

        /// <summary>Output only. The unique name for the answer accounts/locations/questions/answers</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The text of the answer. It should contain at least one non-whitespace character. The maximum length
        /// is 4096 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>Output only. The timestamp for when the answer was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; }

        /// <summary>Output only. The number of upvotes for the answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upvoteCount")]
        public virtual System.Nullable<int> UpvoteCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.AssociateLocationRequest.</summary>
    public class AssociateLocationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The association to establish. If not set, it indicates no match.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeId")]
        public virtual string PlaceId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A location attribute. Attributes provide additional information about a location. The attributes that
    /// can be set on a location may vary based on the properties of that location (for example, category). Available
    /// attributes are determined by Google and may be added and removed without API changes.</summary>
    public class Attribute : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the attribute. Attribute IDs are provided by Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeId")]
        public virtual string AttributeId { get; set; }

        /// <summary>When the attribute value type is REPEATED_ENUM, this contains the attribute value, and the other
        /// values fields must be empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repeatedEnumValue")]
        public virtual RepeatedEnumAttributeValue RepeatedEnumValue { get; set; }

        /// <summary>When the attribute value type is URL, this field contains the value(s) for this attribute, and the
        /// other values fields must be empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlValues")]
        public virtual System.Collections.Generic.IList<UrlAttributeValue> UrlValues { get; set; }

        /// <summary>Output only. The type of value that this attribute contains. This should be used to determine how
        /// to interpret the value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueType")]
        public virtual string ValueType { get; set; }

        /// <summary>The values for this attribute. The type of the values supplied must match that expected for that
        /// attribute; see [AttributeValueType](/my-business/reference/rest/v4/AttributeValueType). This is a repeated
        /// field where multiple attribute values may be provided. Attribute types only support one value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<object> Values { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for an attribute. Contains display information for the attribute, including a localized name
    /// and a heading for grouping related attributes together.</summary>
    public class AttributeMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the attribute.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeId")]
        public virtual string AttributeId { get; set; }

        /// <summary>The localized display name for the attribute, if available; otherwise, the English display
        /// name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The localized display name of the group that contains this attribute, if available; otherwise, the
        /// English group name. Related attributes are collected into a group and should be displayed together under the
        /// heading given here.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupDisplayName")]
        public virtual string GroupDisplayName { get; set; }

        /// <summary>If true, the attribute is deprecated and should no longer be used. If deprecated, updating this
        /// attribute will not result in an error, but updates will not be saved. At some point after being deprecated,
        /// the attribute will be removed entirely and it will become an error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDeprecated")]
        public virtual System.Nullable<bool> IsDeprecated { get; set; }

        /// <summary>If true, the attribute supports multiple values. If false, only a single value should be
        /// provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isRepeatable")]
        public virtual System.Nullable<bool> IsRepeatable { get; set; }

        /// <summary>For some types of attributes (for example, enums), a list of supported values and corresponding
        /// display names for those values is provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueMetadata")]
        public virtual System.Collections.Generic.IList<AttributeValueMetadata> ValueMetadata { get; set; }

        /// <summary>The value type for the attribute. Values set and retrieved should be expected to be of this
        /// type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueType")]
        public virtual string ValueType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for supported attribute values.</summary>
    public class AttributeValueMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name for this value, localized where available; otherwise, in English. The value
        /// display name is intended to be used in context with the attribute display name.
        ///
        /// For example, for a "WiFi" enum attribute, this could contain "Paid" to represent paid Wi-Fi.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The attribute value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Attribution information for customer media items, such as the contributor's name and profile
    /// picture.</summary>
    public class Attribution : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The user name to attribute the media item to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profileName")]
        public virtual string ProfileName { get; set; }

        /// <summary>URL of the attributed user's profile photo thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profilePhotoUrl")]
        public virtual string ProfilePhotoUrl { get; set; }

        /// <summary>The URL of the attributed user's Google Maps profile page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profileUrl")]
        public virtual string ProfileUrl { get; set; }

        /// <summary>The URL of the takedown page, where the media item can be reported if it is
        /// inappropriate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("takedownUrl")]
        public virtual string TakedownUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the author of a question or answer</summary>
    public class Author : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name of the user</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The profile photo URL of the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profilePhotoUrl")]
        public virtual string ProfilePhotoUrl { get; set; }

        /// <summary>The type of user the author is.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A request for basic metric insights.</summary>
    public class BasicMetricsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of metrics to return values for including the options for how the data should be
        /// returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricRequests")]
        public virtual System.Collections.Generic.IList<MetricRequest> MetricRequests { get; set; }

        /// <summary>The range to gather metrics for. The maximum range is 18 months and 3 days from the request date
        /// for start time and 3 days from the request date for the end time. In some cases, the data may still be
        /// missing for days close to the request date. Missing data will be specified in the `metricValues` in the
        /// response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeRange")]
        public virtual TimeRange TimeRange { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.BatchGetLocations.</summary>
    public class BatchGetLocationsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of locations to fetch, specified by their names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationNames")]
        public virtual System.Collections.Generic.IList<string> LocationNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.BatchGetLocations.</summary>
    public class BatchGetLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of locations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<Location> Locations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.BatchGetReviews.</summary>
    public class BatchGetReviewsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether to ignore rating-only reviews.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreRatingOnlyReviews")]
        public virtual System.Nullable<bool> IgnoreRatingOnlyReviews { get; set; }

        /// <summary>A collection of locations to fetch reviews for, specified by their names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationNames")]
        public virtual System.Collections.Generic.IList<string> LocationNames { get; set; }

        /// <summary>Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned
        /// will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time
        /// desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>How many reviews to fetch per page. The default value is 200.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; }

        /// <summary>If specified, it fetches the next page of reviews.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.BatchGetReviews.</summary>
    public class BatchGetReviewsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Reviews with location information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationReviews")]
        public virtual System.Collections.Generic.IList<LocationReview> LocationReviews { get; set; }

        /// <summary>If the number of reviews exceeded the requested page size, this field is populated with a token to
        /// fetch the next page of reviews on a subsequent calls. If there are no more reviews, this field will not be
        /// present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the time periods that this location is open for business. Holds a collection of TimePeriod
    /// instances.</summary>
    public class BusinessHours : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of times that this location is open for business. Each period represents a range of
        /// hours when the location is open during the week.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("periods")]
        public virtual System.Collections.Generic.IList<TimePeriod> Periods { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An action that is performed when the user clicks through the post</summary>
    public class CallToAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of action that will be performed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actionType")]
        public virtual string ActionType { get; set; }

        /// <summary>The URL the user will be directed to upon clicking. This field should be left unset for Call
        /// CTA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A category describing what this business is (not what it does). For a list of valid category IDs, and
    /// the mappings to their human-readable names, see [categories.list](/my-
    /// business/reference/rest/v4/categories/list).</summary>
    public class Category : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A stable ID (provided by Google) for this category. The `category_id` must be specified when
        /// modifying the category (when creating or updating a location).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categoryId")]
        public virtual string CategoryId { get; set; }

        /// <summary>Output only. The human-readable name of the category. This is set when reading the location. When
        /// modifying the location, `category_id` must be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A chain is a brand that your business's locations can be affiliated with.</summary>
    public class Chain : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Names of the chain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chainNames")]
        public virtual System.Collections.Generic.IList<ChainName> ChainNames { get; set; }

        /// <summary>Number of locations that are part of this chain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationCount")]
        public virtual System.Nullable<int> LocationCount { get; set; }

        /// <summary>The chain's resource name, in the format `chains/{chain_place_id}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Websites of the chain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websites")]
        public virtual System.Collections.Generic.IList<ChainUrl> Websites { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Name to be used when displaying the chain.</summary>
    public class ChainName : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name for this chain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The BCP 47 code of language of the name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Url to be used when displaying the chain.</summary>
    public class ChainUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The url for this chain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.ClearLocationAssociationRequest.</summary>
    public class ClearLocationAssociationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Verifications.CompleteVerificationAction.</summary>
    public class CompleteVerificationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>PIN code received by the merchant to complete the verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pin")]
        public virtual string Pin { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Verifications.CompleteVerificationAction.</summary>
    public class CompleteVerificationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The completed verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verification")]
        public virtual Verification Verification { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a whole or partial calendar date, e.g. a birthday. The time of day and time zone are either
    /// specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. This can
    /// represent:
    ///
    /// * A full date, with non-zero year, month and day values * A month and day value, with a zero year, e.g. an
    /// anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, e.g.
    /// a credit card expiration date
    ///
    /// Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.</summary>
    public class Date : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by
        /// itself or a year and month where the day is not significant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<int> Day { get; set; }

        /// <summary>Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<int> Month { get; set; }

        /// <summary>Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<int> Year { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.DeclineInvitation.</summary>
    public class DeclineInvitationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A value for a single metric with a given time dimension.</summary>
    public class DimensionalMetricValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The option that requested this dimensional value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricOption")]
        public virtual string MetricOption { get; set; }

        /// <summary>The dimension for the value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeDimension")]
        public virtual TimeDimension TimeDimension { get; set; }

        /// <summary>The value. If no value is set, then the requested data is missing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Nullable<long> Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Dimensions of the media item.</summary>
    public class Dimensions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Height of the media item, in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("heightPixels")]
        public virtual System.Nullable<int> HeightPixels { get; set; }

        /// <summary>Width of the media item, in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("widthPixels")]
        public virtual System.Nullable<int> WidthPixels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A request for driving direction insights.</summary>
    public class DrivingDirectionMetricsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The BCP 47 code for the language. If a language code is not provided, it defaults to
        /// English.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The number of days to aggregate data for. Results returned will be available data over the last
        /// number of requested days. Valid values are 7, 30, and 90.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numDays")]
        public virtual string NumDays { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information about the location that this location duplicates.</summary>
    public class Duplicate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether the user has access to the location it duplicates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("access")]
        public virtual string Access { get; set; }

        /// <summary>The resource name of the location that this duplicates. Only populated if the authenticated user
        /// has access rights to that location and that location is not deleted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName { get; set; }

        /// <summary>The place ID of the location that this duplicates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeId")]
        public virtual string PlaceId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Input for EMAIL verification.</summary>
    public class EmailInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Email address where the PIN should be sent to.
        ///
        /// An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the
        /// EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name
        /// (local-part) but must match the domain name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emailAddress")]
        public virtual string EmailAddress { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Display data for verifications through email.</summary>
    public class EmailVerificationData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Domain name in the email address. e.g. "gmail.com" in foo@gmail.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("domainName")]
        public virtual string DomainName { get; set; }

        /// <summary>Whether client is allowed to provide a different user name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isUserNameEditable")]
        public virtual System.Nullable<bool> IsUserNameEditable { get; set; }

        /// <summary>User name in the email address. e.g. "foo" in foo@gmail.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userName")]
        public virtual string UserName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Verifications.FetchVerificationOptions.</summary>
    public class FetchVerificationOptionsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Extra context information for the verification of service businesses. Required for the locations
        /// whose business type is CUSTOMER_LOCATION_ONLY. INVALID_ARGUMENT will be thrown if it is set for other
        /// business types of locations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("context")]
        public virtual ServiceBusinessContext Context { get; set; }

        /// <summary>The BCP 47 language code representing the language that is to be used for the verification process.
        /// Available options vary by language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Verifications.FetchVerificationOptions.</summary>
    public class FetchVerificationOptionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The available verification options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<VerificationOption> Options { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.FindMatchingLocations.</summary>
    public class FindMatchingLocationsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The preferred language for the matching location (in BCP-47 format).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Deprecated. This field is ignored for all requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxCacheDuration")]
        public virtual object MaxCacheDuration { get; set; }

        /// <summary>The number of matches to return. The default value is 3, with a maximum of 10. Note that latency
        /// may increase if more are requested. There is no pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numResults")]
        public virtual System.Nullable<int> NumResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.FindMatchingLocations.</summary>
    public class FindMatchingLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>When the matching algorithm was last executed for this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchTime")]
        public virtual object MatchTime { get; set; }

        /// <summary>A collection of locations that are potential matches to the specified location, listed in order
        /// from best to least match. If there is an exact match, it will be in the first position.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchedLocations")]
        public virtual System.Collections.Generic.IList<MatchedLocation> MatchedLocations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Follower metadata for a location.</summary>
    public class FollowersMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total number of followers for the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<ulong> Count { get; set; }

        /// <summary>The resource name for this.
        /// accounts/{account_id}/locations/{location_id}/followers/metadata</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Accounts.GenerateAccountNumber.</summary>
    public class GenerateAccountNumberRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Location that is present on Google. This can be a location that has been claimed by the
    /// user, someone else, or could be unclaimed.</summary>
    public class GoogleLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sparsely populated Location information. This field can be re-used in CreateLocation if it is
        /// not currently claimed by a user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual Location Location { get; set; }

        /// <summary>Resource name of this GoogleLocation, in the format `googleLocations/{googleLocationId}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>A URL that will redirect the user to the request admin rights UI. This field is only present if the
        /// location has already been claimed by any user, including the current user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestAdminRightsUrl")]
        public virtual string RequestAdminRightsUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a location that was modified by Google.</summary>
    public class GoogleUpdatedLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fields that Google updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffMask")]
        public virtual object DiffMask { get; set; }

        /// <summary>The Google-updated version of this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual Location Location { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Output only. Represents a pending invitation.</summary>
    public class Invitation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name for the invitation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The invited role on the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>The sparsely populated account this invitation is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetAccount")]
        public virtual Account TargetAccount { get; set; }

        /// <summary>The target location this invitation is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetLocation")]
        public virtual TargetLocation TargetLocation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A single list item. Each variation of an item in the price list should have its own Item with its own
    /// price data.</summary>
    public class Item : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. ID for the item. Price list, section, and item IDs cannot be duplicated within this
        /// Location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("itemId")]
        public virtual string ItemId { get; set; }

        /// <summary>Required. Language-tagged labels for the item. We recommend that item names be 140 characters or
        /// less, and descriptions 250 characters or less. At least one set of labels is required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<Label> Labels { get; set; }

        /// <summary>Optional. Price of the item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("price")]
        public virtual Money Price { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Label to be used when displaying the price list, section, or item.</summary>
    public class Label : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Description of the price list, section, or item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. Display name for the price list, section, or item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. The BCP-47 language code that these strings apply for. Only one set of labels may be set
        /// per language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An object representing a latitude/longitude pair. This is expressed as a pair of doubles representing
    /// degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard.
    /// Values must be within normalized ranges.</summary>
    public class LatLng : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The latitude in degrees. It must be in the range [-90.0, +90.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; }

        /// <summary>The longitude in degrees. It must be in the range [-180.0, +180.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.ListAccountAdmins.</summary>
    public class ListAccountAdminsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of Admin instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("admins")]
        public virtual System.Collections.Generic.IList<Admin> Admins { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Accounts.ListAccounts.</summary>
    public class ListAccountsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of accounts to which the user has access. The personal account of the user doing the
        /// query will always be the first item of the result, unless it is filtered out.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accounts")]
        public virtual System.Collections.Generic.IList<Account> Accounts { get; set; }

        /// <summary>If the number of accounts exceeds the requested page size, this field is populated with a token to
        /// fetch the next page of accounts on a subsequent call to `accounts.list`. If there are no more accounts, this
        /// field is not present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for QuestionsAndAnswers.ListAnswers</summary>
    public class ListAnswersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The requested answers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answers")]
        public virtual System.Collections.Generic.IList<Answer> Answers { get; set; }

        /// <summary>If the number of answers exceeds the requested max page size, this field is populated with a token
        /// to fetch the next page of answers on a subsequent call. If there are no more answers, this field is not
        /// present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The total number of answers posted for this question across all pages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.ListAttributeMetadata.</summary>
    public class ListAttributeMetadataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of attribute metadata for the available attributes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributes")]
        public virtual System.Collections.Generic.IList<AttributeMetadata> Attributes { get; set; }

        /// <summary>If the number of attributes exceeded the requested page size, this field will be populated with a
        /// token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more
        /// attributes, this field will not be present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListBusinessCategoriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The categories.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual System.Collections.Generic.IList<Category> Categories { get; set; }

        /// <summary>If the number of categories exceeded the requested page size, this field will be populated with a
        /// token to fetch the next page of categories on a subsequent call to `ListBusinessCategories`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The total number of categories for the request parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCategoryCount")]
        public virtual System.Nullable<int> TotalCategoryCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Media.ListCustomerMediaItems.</summary>
    public class ListCustomerMediaItemsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The returned list of media items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaItems")]
        public virtual System.Collections.Generic.IList<MediaItem> MediaItems { get; set; }

        /// <summary>If there are more media items than the requested page size, then this field is populated with a
        /// token to fetch the next page of media items on a subsequent call to ListCustomerMediaItems.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The total number of media items for this location, irrespective of pagination. This number is
        /// approximate, particularly when there are multiple pages of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalMediaItemCount")]
        public virtual System.Nullable<int> TotalMediaItemCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.ListInvitations.</summary>
    public class ListInvitationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of location invitations that are pending for the account. The number of invitations
        /// listed here cannot exceed 1000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invitations")]
        public virtual System.Collections.Generic.IList<Invitation> Invitations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for ListLocalPosts</summary>
    public class ListLocalPostsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The returned list of local posts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("localPosts")]
        public virtual System.Collections.Generic.IList<LocalPost> LocalPosts { get; set; }

        /// <summary>If there are more local posts than the requested page size, then this field is populated with a
        /// token to fetch the next page of local posts on a subsequent call to `ListLocalPosts`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.ListLocationAdmins.</summary>
    public class ListLocationAdminsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of Admin instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("admins")]
        public virtual System.Collections.Generic.IList<Admin> Admins { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.ListLocations.</summary>
    public class ListLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The locations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<Location> Locations { get; set; }

        /// <summary>If the number of locations exceeded the requested page size, this field is populated with a token
        /// to fetch the next page of locations on a subsequent call to `ListLocations`. If there are no more locations,
        /// this field is not present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The approximate number of Locations in the list irrespective of pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Media.ListMediaItems.</summary>
    public class ListMediaItemsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The returned list of media items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaItems")]
        public virtual System.Collections.Generic.IList<MediaItem> MediaItems { get; set; }

        /// <summary>If there are more media items than the requested page size, then this field is populated with a
        /// token to fetch the next page of media items on a subsequent call to ListMediaItems.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The total number of media items for this location, irrespective of pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalMediaItemCount")]
        public virtual System.Nullable<int> TotalMediaItemCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for QuestionsAndAnswers.ListQuestions</summary>
    public class ListQuestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the number of questions exceeds the requested max page size, this field is populated with a
        /// token to fetch the next page of questions on a subsequent call. If there are no more questions, this field
        /// is not present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The requested questions,</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("questions")]
        public virtual System.Collections.Generic.IList<Question> Questions { get; set; }

        /// <summary>The total number of questions posted for this location across all pages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for GoogleLocations.ListRecommendedGoogleLocations.
    ///
    /// It also contains some locations that have been claimed by other GMB users since the last time they were
    /// recommended to this GMB account.</summary>
    public class ListRecommendedGoogleLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The locations recommended to a GMB account. Each of these represents a GoogleLocation that is
        /// present on Maps. The locations are sorted in decreasing order of relevance to the GMB account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("googleLocations")]
        public virtual System.Collections.Generic.IList<GoogleLocation> GoogleLocations { get; set; }

        /// <summary>During pagination, if there are more locations available to be fetched in the next page, this field
        /// is populated with a token to fetch the next page of locations in a subsequent call. If there are no more
        /// locations to be fetched, this field is not present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The total number of recommended locations for this GMB account, irrespective of
        /// pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.ListReviews.</summary>
    public class ListReviewsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the
        /// highest rating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("averageRating")]
        public virtual System.Nullable<double> AverageRating { get; set; }

        /// <summary>If the number of reviews exceeded the requested page size, this field is populated with a token to
        /// fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field
        /// is not present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The reviews.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviews")]
        public virtual System.Collections.Generic.IList<Review> Reviews { get; set; }

        /// <summary>The total number of reviews for this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalReviewCount")]
        public virtual System.Nullable<int> TotalReviewCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Verifications.ListVerifications.</summary>
    public class ListVerificationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the number of verifications exceeded the requested page size, this field will be populated with
        /// a token to fetch the next page of verification on a subsequent call. If there are no more attributes, this
        /// field will not be present in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>List of the verifications.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verifications")]
        public virtual System.Collections.Generic.IList<Verification> Verifications { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a local post for a location.</summary>
    public class LocalPost : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL that users are sent to when clicking through the promotion. Ignored for topic type
        /// `OFFER`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("callToAction")]
        public virtual CallToAction CallToAction { get; set; }

        /// <summary>Output only. Time of the creation of the post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; }

        /// <summary>Event information. Required for topic types `EVENT` and `OFFER`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual LocalPostEvent Event__ { get; set; }

        /// <summary>The language of the local post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The media associated with the post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("media")]
        public virtual System.Collections.Generic.IList<MediaItem> Media { get; set; }

        /// <summary>Output only. Google identifier for this local post in the form:
        /// `accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Additional data for offer posts. This should only be set when the topic_type is OFFER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offer")]
        public virtual LocalPostOffer Offer { get; set; }

        /// <summary>Additional data for product posts. This should only be set when the topic_type is
        /// PRODUCT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("product")]
        public virtual LocalPostProduct Product { get; set; }

        /// <summary>Output only. The link to the local post in Google search. This link can be used to share the post
        /// via social media, email, text, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchUrl")]
        public virtual string SearchUrl { get; set; }

        /// <summary>Output only. The state of the post, indicating what part of its lifecycle it is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Description/body of the local post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary { get; set; }

        /// <summary>Required. The topic type of the post: standard, event, offer, or product.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicType")]
        public virtual string TopicType { get; set; }

        /// <summary>Output only. Time of the last modification of the post made by the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>All the information pertaining to an event featured in a local post.</summary>
    public class LocalPostEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Event start and end date/time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schedule")]
        public virtual TimeInterval Schedule { get; set; }

        /// <summary>Name of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>All the metrics requested for a Local Post.</summary>
    public class LocalPostMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("localPostName")]
        public virtual string LocalPostName { get; set; }

        /// <summary>A list of values for the requested metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricValues")]
        public virtual System.Collections.Generic.IList<MetricValue> MetricValues { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specific fields for offer posts.</summary>
    public class LocalPostOffer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Offer code that is usable in store or online.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("couponCode")]
        public virtual string CouponCode { get; set; }

        /// <summary>Optional. Online link to redeem offer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redeemOnlineUrl")]
        public virtual string RedeemOnlineUrl { get; set; }

        /// <summary>Optional. Offer terms and conditions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("termsConditions")]
        public virtual string TermsConditions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specific fields for product posts.</summary>
    public class LocalPostProduct : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Lower price of the product if the product has a price range, or the price for the
        /// product.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lowerPrice")]
        public virtual Money LowerPrice { get; set; }

        /// <summary>Name of the product.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("productName")]
        public virtual string ProductName { get; set; }

        /// <summary>Upper price of the product. In case price is not a range, lower_price is equal to
        /// upper_price.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upperPrice")]
        public virtual Money UpperPrice { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A location. See the [help center article] (https://support.google.com/business/answer/3038177) for a
    /// detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for
    /// a list of valid business categories.</summary>
    public class Location : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Additional information that is surfaced in AdWords.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adWordsLocationExtensions")]
        public virtual AdWordsLocationExtensions AdWordsLocationExtensions { get; set; }

        /// <summary>Additional categories to describe your business. Categories help your customers find accurate,
        /// specific results for services they're interested in. To keep your business information accurate and live,
        /// make sure that you use as few categories as possible to describe your overall core business. Choose
        /// categories that are as specific as possible, but representative of your main business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCategories")]
        public virtual System.Collections.Generic.IList<Category> AdditionalCategories { get; set; }

        /// <summary>Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in
        /// addition to your primary phone number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalPhones")]
        public virtual System.Collections.Generic.IList<string> AdditionalPhones { get; set; }

        /// <summary>A precise, accurate address to describe your business location. PO boxes or mailboxes located at
        /// remote locations are not acceptable. At this time, you can specify a maximum of five `address_lines` values
        /// in the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual PostalAddress Address { get; set; }

        /// <summary>Attributes for this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributes")]
        public virtual System.Collections.Generic.IList<Attribute> Attributes { get; set; }

        /// <summary>A collection of free-form strings to allow you to tag your business. These labels are NOT user
        /// facing; only you can see them. Limited to 255 characters (per label).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<string> Labels { get; set; }

        /// <summary>The language of the location. Set during creation and not updateable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>User-provided latitude and longitude. When creating a location, this field is ignored if the
        /// provided address geocodes successfully. This field is only returned on get requests if the user-provided
        /// `latlng` value was accepted during create, or the `latlng` value was updated through the Google My Business
        /// website. This field cannot be updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latlng")]
        public virtual LatLng Latlng { get; set; }

        /// <summary>A collection of keys that link this business to other Google properties, such as a Google+ page and
        /// Google Maps Places.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationKey")]
        public virtual LocationKey LocationKey { get; set; }

        /// <summary>Location name should reflect your business's real-world name, as used consistently on your
        /// storefront, website, and stationery, and as known to customers. Any additional information, when relevant,
        /// can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add
        /// unnecessary information to your name (for example, prefer "Google" over "Google Inc. - Mountain View
        /// Corporate Headquarters"). Don't include marketing taglines, store codes, special characters, hours or
        /// closed/open status, phone numbers, website URLs, service/product information, location/address or
        /// directions, or containment information (for example, "Chase ATM in Duane Reade").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName { get; set; }

        /// <summary>Output only. A set of booleans that reflects the state of a location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationState")]
        public virtual LocationState LocationState { get; set; }

        /// <summary>Output Only. Additional non-user-editable information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual Metadata Metadata { get; set; }

        /// <summary>Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}`
        ///
        /// In the context of matches, this field will not be populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>A flag that indicates whether the location is currently open for business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openInfo")]
        public virtual OpenInfo OpenInfo { get; set; }

        /// <summary>Price list information for this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priceLists")]
        public virtual System.Collections.Generic.IList<PriceList> PriceLists { get; set; }

        /// <summary>Category that best describes the core business this location engages in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryCategory")]
        public virtual Category PrimaryCategory { get; set; }

        /// <summary>A phone number that connects to your individual business location as directly as possible. Use a
        /// local phone number instead of a central, call center helpline number whenever possible.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryPhone")]
        public virtual string PrimaryPhone { get; set; }

        /// <summary>Describes your business in your own voice and shares with users the unique story of your business
        /// and offerings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profile")]
        public virtual Profile Profile { get; set; }

        /// <summary>Operating hours for the business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regularHours")]
        public virtual BusinessHours RegularHours { get; set; }

        /// <summary>All locations and chain related to this one.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relationshipData")]
        public virtual RelationshipData RelationshipData { get; set; }

        /// <summary>Service area businesses provide their service at the customer's location. If this business is a
        /// service area business, this field describes the area(s) serviced by the business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceArea")]
        public virtual ServiceAreaBusiness ServiceArea { get; set; }

        /// <summary>Special hours for the business. This typically includes holiday hours, and other times outside of
        /// regular operating hours. These override regular business hours.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("specialHours")]
        public virtual SpecialHours SpecialHours { get; set; }

        /// <summary>External identifier for this location, which must be unique inside a given account. This is a means
        /// of associating the location with your own records.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storeCode")]
        public virtual string StoreCode { get; set; }

        /// <summary>A URL for this business. If possible, use a URL that represents this individual business location
        /// instead of a generic website/URL that represents all locations, or the brand.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteUrl")]
        public virtual string WebsiteUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>How the media item is associated with its location.</summary>
    public class LocationAssociation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The category that this location photo belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; }

        /// <summary>The ID of a price list item that this location photo is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priceListItemId")]
        public virtual string PriceListItemId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A location indexed with the regions that people usually come from. This is captured by counting how
    /// many driving-direction requests to this location are from each region.</summary>
    public class LocationDrivingDirectionMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The location resource name this metric value belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName { get; set; }

        /// <summary>Time zone (IANA timezone IDs, for example, 'Europe/London') of the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>Driving-direction requests by source region. By convention, these are sorted by count with at most
        /// 10 results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topDirectionSources")]
        public virtual System.Collections.Generic.IList<TopDirectionSources> TopDirectionSources { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Alternate/surrogate key references for a location.</summary>
    public class LocationKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. A value of true indicates that an unset place ID is deliberate, which is different
        /// from no association being made yet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("explicitNoPlaceId")]
        public virtual System.Nullable<bool> ExplicitNoPlaceId { get; set; }

        /// <summary>If this location has been verified and is connected to/appears on Google Maps, this field is
        /// populated with the place ID for the location. This ID can be used in various Places APIs.
        ///
        /// If this location is unverified, this field may be populated if the location has been associated with a place
        /// that appears on Google Maps.
        ///
        /// This field can be set during Create calls, but not for Update.
        ///
        /// The additional `explicit_no_place_id` bool qualifies whether an unset place ID is deliberate or
        /// not.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeId")]
        public virtual string PlaceId { get; set; }

        /// <summary>Output only. If this location has a Google+ page associated with it, this is populated with the
        /// Google+ page ID for this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("plusPageId")]
        public virtual string PlusPageId { get; set; }

        /// <summary>Output only. The `request_id` used to create this location. May be empty if this location was
        /// created outside of the GMB API or Google My Business Locations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestId")]
        public virtual string RequestId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A series of Metrics and BreakdownMetrics associated with a Location over some time range.</summary>
    public class LocationMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The location resource name these values belong to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName { get; set; }

        /// <summary>A list of values for the requested metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricValues")]
        public virtual System.Collections.Generic.IList<MetricValue> MetricValues { get; set; }

        /// <summary>IANA timezone for the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a review with location information.</summary>
    public class LocationReview : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Location resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>A review for the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("review")]
        public virtual Review Review { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains a set of booleans that reflect the state of a Location.</summary>
    public class LocationState : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Indicates whether the location can be deleted using the Google My Business
        /// API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canDelete")]
        public virtual System.Nullable<bool> CanDelete { get; set; }

        /// <summary>Output only. Indicates whether the location can be updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canUpdate")]
        public virtual System.Nullable<bool> CanUpdate { get; set; }

        /// <summary>Output only. Indicates whether any of this Location's properties are in the edit pending
        /// state.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasPendingEdits")]
        public virtual System.Nullable<bool> HasPendingEdits { get; set; }

        /// <summary>Output only. Indicates whether the location has pending verification requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasPendingVerification")]
        public virtual System.Nullable<bool> HasPendingVerification { get; set; }

        /// <summary>Output only. Indicates whether the location is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDisabled")]
        public virtual System.Nullable<bool> IsDisabled { get; set; }

        /// <summary>Output only. Indicates whether the location is disconnected from a place on Google Maps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDisconnected")]
        public virtual System.Nullable<bool> IsDisconnected { get; set; }

        /// <summary>Output only. Indicates whether the location is a duplicate of another location. For more
        /// information, see [metadata.duplicate](/my-
        /// business/reference/rest/v4/accounts.locations#Duplicate).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDuplicate")]
        public virtual System.Nullable<bool> IsDuplicate { get; set; }

        /// <summary>Output only. Indicates whether the place ID associated with this location has updates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isGoogleUpdated")]
        public virtual System.Nullable<bool> IsGoogleUpdated { get; set; }

        /// <summary>Output only. Indicates whether [accounts.locations.localPosts](/my-
        /// business/reference/rest/v4/accounts.locations.localPosts) is disabled for this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isLocalPostApiDisabled")]
        public virtual System.Nullable<bool> IsLocalPostApiDisabled { get; set; }

        /// <summary>Output only. Indicates whether the review of the location is pending.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isPendingReview")]
        public virtual System.Nullable<bool> IsPendingReview { get; set; }

        /// <summary>Output only. Indicates whether the location is published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isPublished")]
        public virtual System.Nullable<bool> IsPublished { get; set; }

        /// <summary>Output only. Indicates whether the location is suspended. Suspended locations are not visible to
        /// end users in Google products. If you believe this was a mistake, see the [help center article]
        /// (https://support.google.com/business/answer/4569145).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isSuspended")]
        public virtual System.Nullable<bool> IsSuspended { get; set; }

        /// <summary>Output only. Indicates whether the location is verified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isVerified")]
        public virtual System.Nullable<bool> IsVerified { get; set; }

        /// <summary>Output only. Indicates whether the location requires reverification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("needsReverification")]
        public virtual System.Nullable<bool> NeedsReverification { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a possible match to a location.</summary>
    public class MatchedLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Is this an exact match?</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isExactMatch")]
        public virtual System.Nullable<bool> IsExactMatch { get; set; }

        /// <summary>The sparsely populated location that is a potential match. Unpopulated fields include, but may not
        /// be limited to: name (the matched location cannot be retrieved via `GetLocation` nor `BatchGetLocations`);
        /// `store_code`; `service_area` coverage area details; `labels`; `ad_words_location_extensions`;
        /// `photos`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual Location Location { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Insights and statistics for the media item.</summary>
    public class MediaInsights : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The number of times the media item has been viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual System.Nullable<long> ViewCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A single media item.</summary>
    public class MediaItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Attribution information for customer media items. You must display this attribution as
        /// provided to your users and must not delete or alter the attribution.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attribution")]
        public virtual Attribution Attribution { get; set; }

        /// <summary>Output only. Creation time of this media item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; }

        /// <summary>Input only. A reference to media item binary data as obtained by the `StartUploadMediaItemData`
        /// method.
        ///
        /// When creating a media item, either sourceUrl or dataRef must be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataRef")]
        public virtual MediaItemDataRef DataRef { get; set; }

        /// <summary>Description for this media item. Descriptions cannot be modified through the My Business API, but
        /// can be set when creating a new media item that is not a cover photo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Output only. The dimensions (width and height) in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual Dimensions Dimensions { get; set; }

        /// <summary>Output only. Google-hosted URL for this media item. This URL is not static since it may change over
        /// time. For video this will be a preview image with an overlaid play icon.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("googleUrl")]
        public virtual string GoogleUrl { get; set; }

        /// <summary>Output only. Statistics for this media item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insights")]
        public virtual MediaInsights Insights { get; set; }

        /// <summary>Required when calling `CreatePhoto`. Describes how this media item is connected to its location.
        /// Must be either a category (for example, EXTERIOR) or the ID of a price list item.
        ///
        /// This is required when adding new media to a location with `CreateMediaItem`. For other types of media, for
        /// example, photos on local posts, this will not be present.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationAssociation")]
        public virtual LocationAssociation LocationAssociation { get; set; }

        /// <summary>The format of this media item. Must be set when the media item is created, and is read-only on all
        /// other requests. Cannot be updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaFormat")]
        public virtual string MediaFormat { get; set; }

        /// <summary>The resource name for this media item.
        /// `accounts/{account_id}/locations/{location_id}/media/{media_key}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>A publicly accessible URL where the media item can be retrieved from.
        ///
        /// When creating one of this or data_ref must be set to specify the source of the media item.
        ///
        /// If `source_url` was used when creating a media item, it will be populated with that source URL when the
        /// media item is retrieved.
        ///
        /// This field cannot be updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceUrl")]
        public virtual string SourceUrl { get; set; }

        /// <summary>Output only. Where provided, the URL of a thumbnail image for this media item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailUrl")]
        public virtual string ThumbnailUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Reference to the photo binary data of a `MediaItem` uploaded through the My Business API.
    ///
    /// Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and
    /// subsequently calling CreateMediaItem.</summary>
    public class MediaItemDataRef : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia]
        /// and when creating a new media item from those bytes with CreateMediaItem.
        ///
        /// Example of uploading bytes: `curl -X POST -T{path_to_file}
        /// "http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media"`
        ///
        /// For CreateMediaItem calls, set this as the `MediaItem` `data_ref`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceName")]
        public virtual string ResourceName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional non-user-editable information about the location.</summary>
    public class Metadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Information about the location that this location duplicates. Only present when
        /// `location_state.is_duplicate` is true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duplicate")]
        public virtual Duplicate Duplicate { get; set; }

        /// <summary>A link to the location on Maps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mapsUrl")]
        public virtual string MapsUrl { get; set; }

        /// <summary>A link to the page on Google Search where a customer can leave a review for the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newReviewUrl")]
        public virtual string NewReviewUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A request to return values for one metric and the options for how those values should be
    /// returned.</summary>
    public class MetricRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The requested metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metric")]
        public virtual string Metric { get; set; }

        /// <summary>How the values should appear when returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<string> Options { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A value for a single Metric from a starting time.</summary>
    public class MetricValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dimensional values for this metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionalValues")]
        public virtual System.Collections.Generic.IList<DimensionalMetricValue> DimensionalValues { get; set; }

        /// <summary>The metric for which the value applies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metric")]
        public virtual string Metric { get; set; }

        /// <summary>The total aggregated value for this metric. Set for the AGGREGATED_TOTAL option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalValue")]
        public virtual DimensionalMetricValue TotalValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an amount of money with its currency type.</summary>
    public class Money : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The 3-letter currency code defined in ISO 4217.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; }

        /// <summary>Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999
        /// inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be
        /// positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is
        /// represented as `units`=-1 and `nanos`=-750,000,000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nanos")]
        public virtual System.Nullable<int> Nanos { get; set; }

        /// <summary>The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US
        /// dollar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A Google Cloud Pub/Sub topic where notifications can be published when a location is updated or has a
    /// new review. There will be only one notification settings resource per-account.</summary>
    public class Notifications : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The notifications resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be
        /// specified. To stop receiving notifications entirely, use DeleteNotifications.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationTypes")]
        public virtual System.Collections.Generic.IList<string> NotificationTypes { get; set; }

        /// <summary>The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this
        /// account are updated. If unset, no notifications will be posted.
        ///
        /// The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the
        /// Cloud Pub/Sub topic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicName")]
        public virtual string TopicName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information related to the opening state of the business.</summary>
    public class OpenInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Indicates whether this business is eligible for re-open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canReopen")]
        public virtual System.Nullable<bool> CanReopen { get; set; }

        /// <summary>The date on which the location first opened. If the exact day is not known, month and year only can
        /// be provided. The date must be in the past or be no more than one year in the future.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openingDate")]
        public virtual Date OpeningDate { get; set; }

        /// <summary>Indicates whether or not the Location is currently open for business. All locations are open by
        /// default, unless updated to be closed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional Info stored for an organization.</summary>
    public class OrganizationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact number for the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The postal address for the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalAddress")]
        public virtual PostalAddress PostalAddress { get; set; }

        /// <summary>The registered domain for the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("registeredDomain")]
        public virtual string RegisteredDomain { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Input for PHONE_CALL/SMS verification.</summary>
    public class PhoneInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The phone number that should be called or be sent SMS to. It must be one of the phone numbers in
        /// the eligible options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Display Data for verifications through phone, e.g. phone call, sms.</summary>
    public class PhoneVerificationData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Phone number that the PIN will be sent to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines an area that's represented by a place ID.</summary>
    public class PlaceInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The localized name of the place. For example, `Scottsdale, AZ`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ID of the place.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeId")]
        public virtual string PlaceId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the union of areas represented by a set of places.</summary>
    public class Places : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The areas represented by place IDs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeInfos")]
        public virtual System.Collections.Generic.IList<PlaceInfo> PlaceInfos { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A radius around a particular point (latitude/longitude).</summary>
    public class PointRadius : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The latitude/longitude that specifies the center of an area defined by the radius.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latlng")]
        public virtual LatLng Latlng { get; set; }

        /// <summary>The distance in kilometers of the area around the point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("radiusKm")]
        public virtual System.Nullable<float> RadiusKm { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a
    /// postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical
    /// locations (roads, towns, mountains).
    ///
    /// In typical usage an address would be created via user input or from importing existing data, depending on the
    /// type of process.
    ///
    /// Advice on address input / editing: - Use an i18n-ready address widget such as
    /// https://github.com/googlei18n/libaddressinput) - Users should not be presented with UI elements for input or
    /// editing of fields outside countries where that field is used.
    ///
    /// For more guidance on how to use this schema, please see:
    /// https://support.google.com/business/answer/6397478</summary>
    public class PostalAddress : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Unstructured address lines describing the lower levels of an address.
        ///
        /// Because values in address_lines do not have type information and may sometimes contain multiple values in a
        /// single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines
        /// should be "envelope order" for the country/region of the address. In places where this can vary (e.g.
        /// Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or
        /// "en" for small-to-large). This way, the most specific line of an address can be selected based on the
        /// language.
        ///
        /// The minimum permitted structural representation of an address consists of a region_code with all remaining
        /// information placed in the address_lines. It would be possible to format such an address very approximately
        /// without geocoding, but no semantic reasoning could be made about any of the address components until it was
        /// at least partially resolved.
        ///
        /// Creating an address only containing a region_code and address_lines, and then geocoding is the recommended
        /// way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be
        /// localities or administrative areas).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressLines")]
        public virtual System.Collections.Generic.IList<string> AddressLines { get; set; }

        /// <summary>Optional. Highest administrative subdivision which is used for postal addresses of a country or
        /// region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain
        /// this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries
        /// don't use an administrative area in postal addresses. E.g. in Switzerland this should be left
        /// unpopulated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("administrativeArea")]
        public virtual string AdministrativeArea { get; set; }

        /// <summary>Optional. BCP-47 language code of the contents of this address (if known). This is often the UI
        /// language of the input form or is expected to match one of the languages used in the address' country/region,
        /// or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to
        /// the correctness of the data and will never affect any validation or other non-formatting related operations.
        ///
        /// If this value is not known, it should be omitted (rather than specifying a possibly incorrect default).
        ///
        /// Examples: "zh-Hant", "ja", "ja-Latn", "en".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune,
        /// UK post town. In regions of the world where localities are not well defined or do not fit into this
        /// structure well, leave locality empty and use address_lines.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locality")]
        public virtual string Locality { get; set; }

        /// <summary>Optional. The name of the organization at the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organization")]
        public virtual string Organization { get; set; }

        /// <summary>Optional. Postal code of the address. Not all countries use or require postal codes to be present,
        /// but where they are used, they may trigger additional validation with other parts of the address (e.g.
        /// state/zip validation in the U.S.A.).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCode")]
        public virtual string PostalCode { get; set; }

        /// <summary>Optional. The recipient at the address. This field may, under certain circumstances, contain
        /// multiline information. For example, it might contain "care of" information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recipients")]
        public virtual System.Collections.Generic.IList<string> Recipients { get; set; }

        /// <summary>Required. CLDR region code of the country/region of the address. This is never inferred and it is
        /// up to the user to ensure the value is correct. See http://cldr.unicode.org/ and
        /// http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for
        /// Switzerland.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; }

        /// <summary>The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision.
        ///
        /// All new revisions **must** be backward compatible with old revisions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revision")]
        public virtual System.Nullable<int> Revision { get; set; }

        /// <summary>Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is
        /// used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a
        /// number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office
        /// indicator" (e.g. Côte d'Ivoire).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sortingCode")]
        public virtual string SortingCode { get; set; }

        /// <summary>Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs,
        /// districts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sublocality")]
        public virtual string Sublocality { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A list of item price information. Price lists are structured as one or more price lists, each
    /// containing one or more sections with one or more items. For example, food price lists may represent
    /// breakfast/lunch/dinner menus, with sections for burgers/steak/seafood.</summary>
    public class PriceList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Language-tagged labels for the price list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<Label> Labels { get; set; }

        /// <summary>Required. ID for the price list. Price list, section, and item IDs cannot be duplicated within this
        /// Location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priceListId")]
        public virtual string PriceListId { get; set; }

        /// <summary>Required. Sections for this price list. Each price list must contain at least one
        /// section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sections")]
        public virtual System.Collections.Generic.IList<Section> Sections { get; set; }

        /// <summary>Optional source URL of where the price list was retrieved from. For example, this could be the URL
        /// of the page that was automatically scraped to populate the menu information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceUrl")]
        public virtual string SourceUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>All information pertaining to the location's profile.</summary>
    public class Profile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Description of the location in your own voice, not editable by anyone else.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a single question and some of its answers.</summary>
    public class Question : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The author of the question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual Author Author { get; set; }

        /// <summary>Output only. The timestamp for when the question was written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; }

        /// <summary>Output only. The unique name for the question. accounts/locations/questions</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The text of the question. It should contain at least two words and the total length should be
        /// greater than or equal to 10 characters. The maximum length is 4096 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>Output only. A list of answers to the question, sorted by upvotes. This may not be a complete list
        /// of answers depending on the request parameters (answers_per_question)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topAnswers")]
        public virtual System.Collections.Generic.IList<Answer> TopAnswers { get; set; }

        /// <summary>Output only. The total number of answers posted for this question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalAnswerCount")]
        public virtual System.Nullable<int> TotalAnswerCount { get; set; }

        /// <summary>Output only. The timestamp for when the question was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; }

        /// <summary>Output only. The number of upvotes for the question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upvoteCount")]
        public virtual System.Nullable<int> UpvoteCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A region with its associated request count.</summary>
    public class RegionCount : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Number of driving-direction requests from this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; }

        /// <summary>Human-readable label for the region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; }

        /// <summary>Center of region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latlng")]
        public virtual LatLng Latlng { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information of all parent and children locations related to this one.</summary>
    public class RelationshipData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the Chain that this location is member of. How to find Chain ID</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentChain")]
        public virtual string ParentChain { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Values for an attribute with a `value_type` of REPEATED_ENUM. This consists of two lists of value IDs:
    /// those that are set (true) and those that are unset (false). Values absent are considered unknown. At least one
    /// value must be specified.</summary>
    public class RepeatedEnumAttributeValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enum values that are set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("setValues")]
        public virtual System.Collections.Generic.IList<string> SetValues { get; set; }

        /// <summary>Enum values that are unset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unsetValues")]
        public virtual System.Collections.Generic.IList<string> UnsetValues { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for reporting a GoogleLocation.</summary>
    public class ReportGoogleLocationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The resource name of the location group that this Google Location is being reported for,
        /// in the format `accounts/{account_id}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationGroupName")]
        public virtual string LocationGroupName { get; set; }

        /// <summary>The reason for which the user is reporting this location when the issue is with the location
        /// itself.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportReasonBadLocation")]
        public virtual string ReportReasonBadLocation { get; set; }

        /// <summary>The reason for which the user is reporting this location when the issue is with the recommendation.
        /// This report is useful if the location has been recommended to the GMB account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportReasonBadRecommendation")]
        public virtual string ReportReasonBadRecommendation { get; set; }

        /// <summary>Optional. A text entry for elaborating on the reason for which the user is reporting this location.
        /// The maximum length is 512 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportReasonElaboration")]
        public virtual string ReportReasonElaboration { get; set; }

        /// <summary>Optional. The BCP 47 code of language used in `report_reason_elaboration`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportReasonLanguageCode")]
        public virtual string ReportReasonLanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Insights.ReportLocalPostInsights</summary>
    public class ReportLocalPostInsightsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A request to include basic metric insights in the report. This request applies to all posts
        /// requested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicRequest")]
        public virtual BasicMetricsRequest BasicRequest { get; set; }

        /// <summary>Required. The list of posts for which to fetch insights data. All posts have to belong to the
        /// location whose name is specified in the `name` field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("localPostNames")]
        public virtual System.Collections.Generic.IList<string> LocalPostNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Insights.ReportLocalPostInsights</summary>
    public class ReportLocalPostInsightsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>One entry per requested post corresponding to this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("localPostMetrics")]
        public virtual System.Collections.Generic.IList<LocalPostMetrics> LocalPostMetrics { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Time zone (IANA timezone IDs, eg, 'Europe/London') of the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Insights.ReportLocationInsights.</summary>
    public class ReportLocationInsightsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A request to include basic metric insights in the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicRequest")]
        public virtual BasicMetricsRequest BasicRequest { get; set; }

        /// <summary>A request to include insights about driving-direction requests in the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("drivingDirectionsRequest")]
        public virtual DrivingDirectionMetricsRequest DrivingDirectionsRequest { get; set; }

        /// <summary>A collection of locations to fetch insights for, specified by their names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationNames")]
        public virtual System.Collections.Generic.IList<string> LocationNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for `Insights.ReportLocationInsights`.</summary>
    public class ReportLocationInsightsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of values for driving direction-related metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationDrivingDirectionMetrics")]
        public virtual System.Collections.Generic.IList<LocationDrivingDirectionMetrics> LocationDrivingDirectionMetrics { get; set; }

        /// <summary>A collection of metric values by location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationMetrics")]
        public virtual System.Collections.Generic.IList<LocationMetrics> LocationMetrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Output only. Represents a review for a location.</summary>
    public class Review : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The body of the review as plain text with markups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; }

        /// <summary>The timestamp for when the review was written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; }

        /// <summary>The resource name. For Review it is of the form
        /// `accounts/{account_id}/locations/{location_id}/reviews/{review_id}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The encrypted unique identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewId")]
        public virtual string ReviewId { get; set; }

        /// <summary>The owner/manager of this location's reply to this review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewReply")]
        public virtual ReviewReply ReviewReply { get; set; }

        /// <summary>The author of the review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewer")]
        public virtual Reviewer Reviewer { get; set; }

        /// <summary>The star rating of the review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("starRating")]
        public virtual string StarRating { get; set; }

        /// <summary>The timestamp for when the review was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the location owner/manager's reply to a review.</summary>
    public class ReviewReply : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The body of the reply as plain text with markups. The maximum length is 4096 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; }

        /// <summary>Output only. The timestamp for when the reply was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the author of the review.</summary>
    public class Reviewer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the reviewer. Only populated with the reviewer's real name if `is_anonymous` is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Indicates whether the reviewer has opted to remain anonymous.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isAnonymous")]
        public virtual System.Nullable<bool> IsAnonymous { get; set; }

        /// <summary>The profile photo link of the reviewer. Only populated if `is_anonymous` is false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profilePhotoUrl")]
        public virtual string ProfilePhotoUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for MyBusiness.SearchChains.</summary>
    public class SearchChainsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chains that match the queried chain_display_name in SearchChainsRequest. If there are no matches,
        /// this field will be empty. Results are listed in order of relevance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chains")]
        public virtual System.Collections.Generic.IList<Chain> Chains { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for GoogleLocations.SearchGoogleLocations.</summary>
    public class SearchGoogleLocationsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Location to search for. If provided, will find locations which match the provided location
        /// details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual Location Location { get; set; }

        /// <summary>Text query to search for. The search results from a query string will be less accurate than if
        /// providing an exact location, but can provide more inexact matches.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>The number of matches to return. The default value is 3, with a maximum of 10. Note that latency
        /// may increase if more are requested. There is no pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultCount")]
        public virtual System.Nullable<int> ResultCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for GoogleLocations.SearchGoogleLocations.</summary>
    public class SearchGoogleLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of GoogleLocations that are potential matches to the specified request, listed in
        /// order from most to least accuracy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("googleLocations")]
        public virtual System.Collections.Generic.IList<GoogleLocation> GoogleLocations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A section of the price list containing one or more items.</summary>
    public class Section : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Items that are contained within this section of the price list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Item> Items { get; set; }

        /// <summary>Required. Language-tagged labels for the section. We recommend that section names and descriptions
        /// be 140 characters or less. At least one set of labels is required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<Label> Labels { get; set; }

        /// <summary>Required. ID for the section. Price list, section, and item IDs cannot be duplicated within this
        /// Location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionId")]
        public virtual string SectionId { get; set; }

        /// <summary>Optional. Type of the current price list section. Default value is FOOD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Service area businesses provide their service at the customer's location (for example, a locksmith or
    /// plumber).</summary>
    public class ServiceAreaBusiness : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates the type of the service area business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("businessType")]
        public virtual string BusinessType { get; set; }

        /// <summary>The area that this business serves defined through a set of places.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("places")]
        public virtual Places Places { get; set; }

        /// <summary>The area that this business serves centered around a point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("radius")]
        public virtual PointRadius Radius { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional data for service business verification.</summary>
    public class ServiceBusinessContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The verification address of the location. It is used to either enable more verification options or
        /// send a postcard.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual PostalAddress Address { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a single time period when a location's operational hours differ from its normal business
    /// hours. A special hour period must represent a range of less than 24 hours. The `open_time` and `start_date` must
    /// predate the `close_time` and `end_date`. The `close_time` and `end_date` can extend to 11:59 a.m. on the day
    /// after the specified `start_date`. For example, the following inputs are valid:
    ///
    /// start_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-23,
    /// open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=11:59
    ///
    /// The following inputs are not valid:
    ///
    /// start_date=2015-11-23, open_time=13:00, close_time=11:59 start_date=2015-11-23, end_date=2015-11-24,
    /// open_time=13:00, close_time=12:00 start_date=2015-11-23, end_date=2015-11-25, open_time=08:00,
    /// close_time=18:00</summary>
    public class SpecialHourPeriod : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The wall time on `end_date` when a location closes, expressed in 24hr ISO 8601 extended format.
        /// (hh:mm) Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
        /// Must be specified if `is_closed` is false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("closeTime")]
        public virtual string CloseTime { get; set; }

        /// <summary>The calendar date this special hour period ends on. If `end_date` field is not set, default to the
        /// date specified in `start_date`. If set, this field must be equal to or at most 1 day after
        /// `start_date`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual Date EndDate { get; set; }

        /// <summary>If true, `end_date`, `open_time`, and `close_time` are ignored, and the date specified in
        /// `start_date` is treated as the location being closed for the entire day.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isClosed")]
        public virtual System.Nullable<bool> IsClosed { get; set; }

        /// <summary>The wall time on `start_date` when a location opens, expressed in 24hr ISO 8601 extended format.
        /// (hh:mm) Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
        /// Must be specified if `is_closed` is false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openTime")]
        public virtual string OpenTime { get; set; }

        /// <summary>The calendar date this special hour period starts on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual Date StartDate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a set of time periods when a location's operational hours differ from its normal business
    /// hours.</summary>
    public class SpecialHours : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of exceptions to the business's regular hours.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("specialHourPeriods")]
        public virtual System.Collections.Generic.IList<SpecialHourPeriod> SpecialHourPeriods { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Media.StartUploadMediaItemData.</summary>
    public class StartUploadMediaItemDataRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a target location for a pending invitation.</summary>
    public class TargetLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The address of the location to which the user is invited.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationAddress")]
        public virtual string LocationAddress { get; set; }

        /// <summary>The name of the location to which the user is invited.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The dimension for which data is divided over.</summary>
    public class TimeDimension : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The day of the week ("MONDAY" to "SUNDAY") this value corresponds to. Set for BREAKDOWN_DAY_OF_WEEK
        /// option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dayOfWeek")]
        public virtual string DayOfWeek { get; set; }

        /// <summary>The hour of the day (0 to 23) this value corresponds to. Set for BREAKDOWN_HOUR_OF_DAY
        /// option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeOfDay")]
        public virtual TimeOfDay TimeOfDay { get; set; }

        /// <summary>The range of time this value covers. Set for AGGREGATED_TOTAL and AGGREGATED_DAILY
        /// options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeRange")]
        public virtual TimeRange TimeRange { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An interval of time, inclusive. It must contain all fields to be valid.</summary>
    public class TimeInterval : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The end date of this period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual Date EndDate { get; set; }

        /// <summary>The end time of this period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual TimeOfDay EndTime { get; set; }

        /// <summary>The start date of this period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual Date StartDate { get; set; }

        /// <summary>The start time of this period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual TimeOfDay StartTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a time of day. The date and time zone are either not significant or are specified elsewhere.
    /// An API may choose to allow leap seconds. Related types are google.type.Date and
    /// `google.protobuf.Timestamp`.</summary>
    public class TimeOfDay : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value
        /// "24:00:00" for scenarios like business closing time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hours")]
        public virtual System.Nullable<int> Hours { get; set; }

        /// <summary>Minutes of hour of day. Must be from 0 to 59.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minutes")]
        public virtual System.Nullable<int> Minutes { get; set; }

        /// <summary>Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nanos")]
        public virtual System.Nullable<int> Nanos { get; set; }

        /// <summary>Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it
        /// allows leap-seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seconds")]
        public virtual System.Nullable<int> Seconds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a span of time that the business is open, starting on the specified open day/time and
    /// closing on the specified close day/time. The closing time must occur after the opening time, for example later
    /// in the same day, or on a subsequent day.</summary>
    public class TimePeriod : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates the day of the week this period ends on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("closeDay")]
        public virtual string CloseDay { get; set; }

        /// <summary>Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents
        /// midnight at the end of the specified day field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("closeTime")]
        public virtual string CloseTime { get; set; }

        /// <summary>Indicates the day of the week this period starts on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openDay")]
        public virtual string OpenDay { get; set; }

        /// <summary>Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents
        /// midnight at the end of the specified day field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openTime")]
        public virtual string OpenTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A range of time. Data will be pulled over the range as a half-open inverval (that is, [start_time,
    /// end_time)).</summary>
    public class TimeRange : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Epoch timestamp for the end of the range (exclusive).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual object EndTime { get; set; }

        /// <summary>Epoch timestamp for the start of the range (inclusive).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual object StartTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Top regions where driving-direction requests originated from.</summary>
    public class TopDirectionSources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of days data is aggregated over.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dayCount")]
        public virtual System.Nullable<int> DayCount { get; set; }

        /// <summary>Regions sorted in descending order by count.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCounts")]
        public virtual System.Collections.Generic.IList<RegionCount> RegionCounts { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.TransferLocation.</summary>
    public class TransferLocationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the account resource to transfer the location to (for example,
        /// "accounts/8675309").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toAccount")]
        public virtual string ToAccount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for QuestionsAndAnswers.UpsertAnswer</summary>
    public class UpsertAnswerRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The new answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual Answer Answer { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Values for an attribute with a `value_type` of URL.</summary>
    public class UrlAttributeValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A verification represents a verification attempt on a location.</summary>
    public class Verification : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The timestamp when the verification is requested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; }

        /// <summary>The method of the verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method { get; set; }

        /// <summary>Resource name of the verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The state of the verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The verification option represents how to verify the location (indicated by verification method) and
    /// where the verification will be sent to (indicated by display data).</summary>
    public class VerificationOption : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Set only if the method is MAIL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressData")]
        public virtual AddressVerificationData AddressData { get; set; }

        /// <summary>Set only if the method is EMAIL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emailData")]
        public virtual EmailVerificationData EmailData { get; set; }

        /// <summary>Set only if the method is PHONE_CALL or SMS.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneData")]
        public virtual PhoneVerificationData PhoneData { get; set; }

        /// <summary>Method to verify the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verificationMethod")]
        public virtual string VerificationMethod { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for MyBusiness.VerifyLocation.</summary>
    public class VerifyLocationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The input for ADDRESS method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressInput")]
        public virtual AddressInput AddressInput { get; set; }

        /// <summary>Extra context information for the verification of service businesses. Required for the locations
        /// whose business type is CUSTOMER_LOCATION_ONLY. For ADDRESS verification, the address will be used to send
        /// out postcard. For other methods, it should be the same as the one that is passed to
        /// FetchVerificationOptions. INVALID_ARGUMENT will be thrown if it is set for other types of business
        /// locations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("context")]
        public virtual ServiceBusinessContext Context { get; set; }

        /// <summary>The input for EMAIL method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emailInput")]
        public virtual EmailInput EmailInput { get; set; }

        /// <summary>The BCP 47 language code representing the language that is to be used for the verification
        /// process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Verification method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method { get; set; }

        /// <summary>The input for PHONE_CALL/SMS method</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneInput")]
        public virtual PhoneInput PhoneInput { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Verifications.VerifyLocation.</summary>
    public class VerifyLocationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The created verification request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verification")]
        public virtual Verification Verification { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Google.Apis.MyBusiness.v4
{
    /// <summary>The MyBusiness Service.</summary>
    public class MyBusinessService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v4";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public MyBusinessService() :
            this(new Google.Apis.Services.BaseClientService.Initializer())
        { }

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public MyBusinessService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            accounts = new AccountsResource(this);
            attributes = new AttributesResource(this);
            categories = new CategoriesResource(this);
            chains = new ChainsResource(this);
            googleLocations = new GoogleLocationsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "mybusiness"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://mybusiness.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }





        private readonly AccountsResource accounts;

        /// <summary>Gets the Accounts resource.</summary>
        public virtual AccountsResource Accounts
        {
            get { return accounts; }
        }

        private readonly AttributesResource attributes;

        /// <summary>Gets the Attributes resource.</summary>
        public virtual AttributesResource Attributes
        {
            get { return attributes; }
        }

        private readonly CategoriesResource categories;

        /// <summary>Gets the Categories resource.</summary>
        public virtual CategoriesResource Categories
        {
            get { return categories; }
        }

        private readonly ChainsResource chains;

        /// <summary>Gets the Chains resource.</summary>
        public virtual ChainsResource Chains
        {
            get { return chains; }
        }

        private readonly GoogleLocationsResource googleLocations;

        /// <summary>Gets the GoogleLocations resource.</summary>
        public virtual GoogleLocationsResource GoogleLocations
        {
            get { return googleLocations; }
        }
    }

    ///<summary>A base abstract class for MyBusiness requests.</summary>
    public abstract class MyBusinessBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new MyBusinessBaseServiceRequest instance.</summary>
        protected MyBusinessBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes MyBusiness parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "accounts" collection of methods.</summary>
    public class AccountsResource
    {
        private const string Resource = "accounts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            admins = new AdminsResource(service);
            invitations = new InvitationsResource(service);
            locations = new LocationsResource(service);

        }

        private readonly AdminsResource admins;

        /// <summary>Gets the Admins resource.</summary>
        public virtual AdminsResource Admins
        {
            get { return admins; }
        }

        /// <summary>The "admins" collection of methods.</summary>
        public class AdminsResource
        {
            private const string Resource = "admins";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AdminsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Invites the specified user to become an administrator for the specified account. The invitee
            /// must accept the invitation in order to be granted access to the account. See AcceptInvitation to
            /// programmatically accept an invitation.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The resource name of the account this admin is created for.</param>
            public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.Admin body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Invites the specified user to become an administrator for the specified account. The invitee
            /// must accept the invitation in order to be granted access to the account. See AcceptInvitation to
            /// programmatically accept an invitation.</summary>
            public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Admin>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Admin body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the account this admin is created for.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.Admin Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+parent}/admins"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                }

            }

            /// <summary>Removes the specified admin from the specified account.</summary>
            /// <param name="name">The resource name of the admin to remove from the account.</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Removes the specified admin from the specified account.</summary>
            public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The resource name of the admin to remove from the account.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/admins/[^/]+$",
                        });
                }

            }

            /// <summary>Lists the admins for the specified account.</summary>
            /// <param name="parent">The name of the account from which to retrieve a list of admins.</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists the admins for the specified account.</summary>
            public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListAccountAdminsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The name of the account from which to retrieve a list of admins.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+parent}/admins"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                }

            }

            /// <summary>Updates the Admin for the specified Account Admin. Only the AdminRole of the Admin can be
            /// updated.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the admin to update.</param>
            public virtual PatchRequest Patch(Google.Apis.MyBusiness.v4.Data.Admin body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates the Admin for the specified Account Admin. Only the AdminRole of the Admin can be
            /// updated.</summary>
            public class PatchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Admin>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Admin body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the admin to update.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.Admin Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/admins/[^/]+$",
                        });
                }

            }
        }
        private readonly InvitationsResource invitations;

        /// <summary>Gets the Invitations resource.</summary>
        public virtual InvitationsResource Invitations
        {
            get { return invitations; }
        }

        /// <summary>The "invitations" collection of methods.</summary>
        public class InvitationsResource
        {
            private const string Resource = "invitations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public InvitationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Accepts the specified invitation.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the invitation that is being accepted.</param>
            public virtual AcceptRequest Accept(Google.Apis.MyBusiness.v4.Data.AcceptInvitationRequest body, string name)
            {
                return new AcceptRequest(service, body, name);
            }

            /// <summary>Accepts the specified invitation.</summary>
            public class AcceptRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
            {
                /// <summary>Constructs a new Accept request.</summary>
                public AcceptRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.AcceptInvitationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the invitation that is being accepted.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.AcceptInvitationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "accept"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:accept"; }
                }

                /// <summary>Initializes Accept parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/invitations/[^/]+$",
                        });
                }

            }

            /// <summary>Declines the specified invitation.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the account invitation that is being declined.</param>
            public virtual DeclineRequest Decline(Google.Apis.MyBusiness.v4.Data.DeclineInvitationRequest body, string name)
            {
                return new DeclineRequest(service, body, name);
            }

            /// <summary>Declines the specified invitation.</summary>
            public class DeclineRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
            {
                /// <summary>Constructs a new Decline request.</summary>
                public DeclineRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.DeclineInvitationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the account invitation that is being declined.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.DeclineInvitationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "decline"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:decline"; }
                }

                /// <summary>Initializes Decline parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/invitations/[^/]+$",
                        });
                }

            }

            /// <summary>Lists pending invitations for the specified account.</summary>
            /// <param name="parent">The name of the account from which the list of invitations is being retrieved.</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists pending invitations for the specified account.</summary>
            public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListInvitationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The name of the account from which the list of invitations is being retrieved.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Specifies which target types should appear in the response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("targetType", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<TargetTypeEnum> TargetType { get; set; }

                /// <summary>Specifies which target types should appear in the response.</summary>
                public enum TargetTypeEnum
                {
                    [Google.Apis.Util.StringValueAttribute("ALL")]
                    ALL,
                    [Google.Apis.Util.StringValueAttribute("ACCOUNTS_ONLY")]
                    ACCOUNTSONLY,
                    [Google.Apis.Util.StringValueAttribute("LOCATIONS_ONLY")]
                    LOCATIONSONLY,
                }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+parent}/invitations"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                    RequestParameters.Add(
                        "targetType", new Google.Apis.Discovery.Parameter
                        {
                            Name = "targetType",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly LocationsResource locations;

        /// <summary>Gets the Locations resource.</summary>
        public virtual LocationsResource Locations
        {
            get { return locations; }
        }

        /// <summary>The "locations" collection of methods.</summary>
        public class LocationsResource
        {
            private const string Resource = "locations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                admins = new AdminsResource(service);
                followers = new FollowersResource(service);
                localPosts = new LocalPostsResource(service);
                media = new MediaResource(service);
                questions = new QuestionsResource(service);
                reviews = new ReviewsResource(service);
                verifications = new VerificationsResource(service);

            }

            private readonly AdminsResource admins;

            /// <summary>Gets the Admins resource.</summary>
            public virtual AdminsResource Admins
            {
                get { return admins; }
            }

            /// <summary>The "admins" collection of methods.</summary>
            public class AdminsResource
            {
                private const string Resource = "admins";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public AdminsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Invites the specified user to become an administrator for the specified location. The
                /// invitee must accept the invitation in order to be granted access to the location. See
                /// AcceptInvitation to programmatically accept an invitation.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The resource name of the location this admin is created for.</param>
                public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.Admin body, string parent)
                {
                    return new CreateRequest(service, body, parent);
                }

                /// <summary>Invites the specified user to become an administrator for the specified location. The
                /// invitee must accept the invitation in order to be granted access to the location. See
                /// AcceptInvitation to programmatically accept an invitation.</summary>
                public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Admin>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Admin body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The resource name of the location this admin is created for.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.Admin Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/admins"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }

                /// <summary>Removes the specified admin as a manager of the specified location.</summary>
                /// <param name="name">The resource name of the admin to remove from the location.</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Removes the specified admin as a manager of the specified location.</summary>
                public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The resource name of the admin to remove from the location.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/admins/[^/]+$",
                            });
                    }

                }

                /// <summary>Lists all of the admins for the specified location.</summary>
                /// <param name="parent">The name of the location to list admins of.</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>Lists all of the admins for the specified location.</summary>
                public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListLocationAdminsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>The name of the location to list admins of.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/admins"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }

                /// <summary>Updates the Admin for the specified Location Admin. Only the AdminRole of the Admin can be
                /// updated.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">The resource name of the admin to update.</param>
                public virtual PatchRequest Patch(Google.Apis.MyBusiness.v4.Data.Admin body, string name)
                {
                    return new PatchRequest(service, body, name);
                }

                /// <summary>Updates the Admin for the specified Location Admin. Only the AdminRole of the Admin can be
                /// updated.</summary>
                public class PatchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Admin>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Admin body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The resource name of the admin to update.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.Admin Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "patch"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PATCH"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/admins/[^/]+$",
                            });
                    }

                }
            }
            private readonly FollowersResource followers;

            /// <summary>Gets the Followers resource.</summary>
            public virtual FollowersResource Followers
            {
                get { return followers; }
            }

            /// <summary>The "followers" collection of methods.</summary>
            public class FollowersResource
            {
                private const string Resource = "followers";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public FollowersResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Get the followers settings for a location.
                ///
                /// NOT_FOUND is returned if either the account or the location doesn't exist. PRECONDITION_FAILED is
                /// returned if the location is not verified nor connected to Maps.</summary>
                /// <param name="name">The resource name of the location's followers metadata.
                /// accounts/{account_id}/locations/{location_id}/followers/metadata</param>
                public virtual GetMetadataRequest GetMetadata(string name)
                {
                    return new GetMetadataRequest(service, name);
                }

                /// <summary>Get the followers settings for a location.
                ///
                /// NOT_FOUND is returned if either the account or the location doesn't exist. PRECONDITION_FAILED is
                /// returned if the location is not verified nor connected to Maps.</summary>
                public class GetMetadataRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.FollowersMetadata>
                {
                    /// <summary>Constructs a new GetMetadata request.</summary>
                    public GetMetadataRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The resource name of the location's followers metadata.
                    /// accounts/{account_id}/locations/{location_id}/followers/metadata</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "getMetadata"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes GetMetadata parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/followers/metadata$",
                            });
                    }

                }
            }
            private readonly LocalPostsResource localPosts;

            /// <summary>Gets the LocalPosts resource.</summary>
            public virtual LocalPostsResource LocalPosts
            {
                get { return localPosts; }
            }

            /// <summary>The "localPosts" collection of methods.</summary>
            public class LocalPostsResource
            {
                private const string Resource = "localPosts";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public LocalPostsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Creates a new local post associated with the specified location, and returns it.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The name of the location in which to create this local post.</param>
                public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.LocalPost body, string parent)
                {
                    return new CreateRequest(service, body, parent);
                }

                /// <summary>Creates a new local post associated with the specified location, and returns it.</summary>
                public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.LocalPost>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.LocalPost body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The name of the location in which to create this local post.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.LocalPost Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/localPosts"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }

                /// <summary>Deletes a local post. Returns `NOT_FOUND` if the local post does not exist.</summary>
                /// <param name="name">The name of the local post to delete.</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Deletes a local post. Returns `NOT_FOUND` if the local post does not exist.</summary>
                public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the local post to delete.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/localPosts/[^/]+$",
                            });
                    }

                }

                /// <summary>Gets the specified local post. Returns `NOT_FOUND` if the local post does not
                /// exist.</summary>
                /// <param name="name">The name of the local post to fetch.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(service, name);
                }

                /// <summary>Gets the specified local post. Returns `NOT_FOUND` if the local post does not
                /// exist.</summary>
                public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.LocalPost>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the local post to fetch.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/localPosts/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns a list of local posts associated with a location.</summary>
                /// <param name="parent">The name of the location whose local posts will be listed.</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>Returns a list of local posts associated with a location.</summary>
                public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListLocalPostsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>The name of the location whose local posts will be listed.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>If specified, returns the next page of local posts.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>How many local posts to return per page. Default of 20. The minimum is 1, and maximum
                    /// page size is 100.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/localPosts"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Updates the specified local post and returns the updated local post.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">The name of the local post to update.</param>
                public virtual PatchRequest Patch(Google.Apis.MyBusiness.v4.Data.LocalPost body, string name)
                {
                    return new PatchRequest(service, body, name);
                }

                /// <summary>Updates the specified local post and returns the updated local post.</summary>
                public class PatchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.LocalPost>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.LocalPost body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The name of the local post to update.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>The specific fields to update. You must specify each field that is being updated in the
                    /// mask.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.LocalPost Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "patch"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PATCH"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/localPosts/[^/]+$",
                            });
                        RequestParameters.Add(
                            "updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Returns insights for a set of local posts associated with a single listing. Which metrics
                /// and how they are reported are options specified in the request proto. Note: Insight reports are
                /// limited to 100 `local_post_names` per call.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">Required. The name of the location for which to fetch insights.</param>
                public virtual ReportInsightsRequest ReportInsights(Google.Apis.MyBusiness.v4.Data.ReportLocalPostInsightsRequest body, string name)
                {
                    return new ReportInsightsRequest(service, body, name);
                }

                /// <summary>Returns insights for a set of local posts associated with a single listing. Which metrics
                /// and how they are reported are options specified in the request proto. Note: Insight reports are
                /// limited to 100 `local_post_names` per call.</summary>
                public class ReportInsightsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ReportLocalPostInsightsResponse>
                {
                    /// <summary>Constructs a new ReportInsights request.</summary>
                    public ReportInsightsRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.ReportLocalPostInsightsRequest body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Required. The name of the location for which to fetch insights.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.ReportLocalPostInsightsRequest Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "reportInsights"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}/localPosts:reportInsights"; }
                    }

                    /// <summary>Initializes ReportInsights parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }
            }
            private readonly MediaResource media;

            /// <summary>Gets the Media resource.</summary>
            public virtual MediaResource Media
            {
                get { return media; }
            }

            /// <summary>The "media" collection of methods.</summary>
            public class MediaResource
            {
                private const string Resource = "media";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public MediaResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    customers = new CustomersResource(service);

                }

                private readonly CustomersResource customers;

                /// <summary>Gets the Customers resource.</summary>
                public virtual CustomersResource Customers
                {
                    get { return customers; }
                }

                /// <summary>The "customers" collection of methods.</summary>
                public class CustomersResource
                {
                    private const string Resource = "customers";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public CustomersResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;

                    }


                    /// <summary>Returns metadata for the requested customer media item.</summary>
                    /// <param name="name">The resource name of the requested customer media item.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(service, name);
                    }

                    /// <summary>Returns metadata for the requested customer media item.</summary>
                    public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.MediaItem>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name)
                            : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }


                        /// <summary>The resource name of the requested customer media item.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "get"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "GET"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v4/{+name}"; }
                        }

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^accounts/[^/]+/locations/[^/]+/media/customers/[^/]+$",
                                });
                        }

                    }

                    /// <summary>Returns a list of media items associated with a location that have been contributed by
                    /// customers.</summary>
                    /// <param name="parent">The name of the location whose customer media items will be listed.</param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(service, parent);
                    }

                    /// <summary>Returns a list of media items associated with a location that have been contributed by
                    /// customers.</summary>
                    public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListCustomerMediaItemsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent)
                            : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }


                        /// <summary>The name of the location whose customer media items will be listed.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>If specified, returns the next page of media items.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>How many media items to return per page. The default value is 100, the maximum
                        /// supported page size is 200.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "list"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "GET"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v4/{+parent}/media/customers"; }
                        }

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                                });
                            RequestParameters.Add(
                                "pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                        }

                    }
                }

                /// <summary>Creates a new media item for the location.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The resource name of the location where this media item will be created.</param>
                public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.MediaItem body, string parent)
                {
                    return new CreateRequest(service, body, parent);
                }

                /// <summary>Creates a new media item for the location.</summary>
                public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.MediaItem>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.MediaItem body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The resource name of the location where this media item will be created.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.MediaItem Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/media"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }

                /// <summary>Deletes the specified media item.</summary>
                /// <param name="name">The name of the media item to be deleted.</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Deletes the specified media item.</summary>
                public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the media item to be deleted.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/media/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns metadata for the requested media item.</summary>
                /// <param name="name">The name of the requested media item.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(service, name);
                }

                /// <summary>Returns metadata for the requested media item.</summary>
                public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.MediaItem>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the requested media item.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/media/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns a list of media items associated with a location.</summary>
                /// <param name="parent">The name of the location whose media items will be listed.</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>Returns a list of media items associated with a location.</summary>
                public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListMediaItemsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>The name of the location whose media items will be listed.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>If specified, returns the next page of media items.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>How many media items to return per page. The default value is 100, which is also the
                    /// maximum supported number of media items able to be added to a location with the My Business API.
                    /// Maximum page size is 2500.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/media"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Updates metadata of the specified media item. This can only be used to update the Category
                /// of a media item, with the exception that the new category cannot be COVER or PROFILE.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">The name of the media item to be updated.</param>
                public virtual PatchRequest Patch(Google.Apis.MyBusiness.v4.Data.MediaItem body, string name)
                {
                    return new PatchRequest(service, body, name);
                }

                /// <summary>Updates metadata of the specified media item. This can only be used to update the Category
                /// of a media item, with the exception that the new category cannot be COVER or PROFILE.</summary>
                public class PatchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.MediaItem>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.MediaItem body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The name of the media item to be updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>The specific fields to update. If no mask is specified, then this is treated as a full
                    /// update and all editable fields are set to the values passed in.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.MediaItem Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "patch"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PATCH"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/media/[^/]+$",
                            });
                        RequestParameters.Add(
                            "updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Generates a `MediaItemDataRef` for media item uploading.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The resource name of the location this media item is to be added to.</param>
                public virtual StartUploadRequest StartUpload(Google.Apis.MyBusiness.v4.Data.StartUploadMediaItemDataRequest body, string parent)
                {
                    return new StartUploadRequest(service, body, parent);
                }

                /// <summary>Generates a `MediaItemDataRef` for media item uploading.</summary>
                public class StartUploadRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.MediaItemDataRef>
                {
                    /// <summary>Constructs a new StartUpload request.</summary>
                    public StartUploadRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.StartUploadMediaItemDataRequest body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The resource name of the location this media item is to be added to.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.StartUploadMediaItemDataRequest Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "startUpload"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/media:startUpload"; }
                    }

                    /// <summary>Initializes StartUpload parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }
            }
            private readonly QuestionsResource questions;

            /// <summary>Gets the Questions resource.</summary>
            public virtual QuestionsResource Questions
            {
                get { return questions; }
            }

            /// <summary>The "questions" collection of methods.</summary>
            public class QuestionsResource
            {
                private const string Resource = "questions";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public QuestionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    answers = new AnswersResource(service);

                }

                private readonly AnswersResource answers;

                /// <summary>Gets the Answers resource.</summary>
                public virtual AnswersResource Answers
                {
                    get { return answers; }
                }

                /// <summary>The "answers" collection of methods.</summary>
                public class AnswersResource
                {
                    private const string Resource = "answers";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public AnswersResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;

                    }


                    /// <summary>Deletes the answer written by the current user to a question.</summary>
                    /// <param name="parent">The name of the question to delete an answer for.</param>
                    public virtual DeleteRequest Delete(string parent)
                    {
                        return new DeleteRequest(service, parent);
                    }

                    /// <summary>Deletes the answer written by the current user to a question.</summary>
                    public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string parent)
                            : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }


                        /// <summary>The name of the question to delete an answer for.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "delete"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "DELETE"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v4/{+parent}/answers:delete"; }
                        }

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^accounts/[^/]+/locations/[^/]+/questions/[^/]+$",
                                });
                        }

                    }

                    /// <summary>Returns the paginated list of answers for a specified question.</summary>
                    /// <param name="parent">The name of the question to fetch answers for.</param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(service, parent);
                    }

                    /// <summary>Returns the paginated list of answers for a specified question.</summary>
                    public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListAnswersResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent)
                            : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }


                        /// <summary>The name of the question to fetch answers for.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>The order to return the answers. Valid options include 'update_time desc' and
                        /// 'upvote_count desc', which will return the answers sorted descendingly by the requested
                        /// field. The default sort order is 'update_time desc'.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string OrderBy { get; set; }

                        /// <summary>If specified, the next page of answers is retrieved.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>How many answers to fetch per page. The default and maximum `page_size` values are
                        /// 10.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "list"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "GET"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v4/{+parent}/answers"; }
                        }

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^accounts/[^/]+/locations/[^/]+/questions/[^/]+$",
                                });
                            RequestParameters.Add(
                                "orderBy", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "orderBy",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                        }

                    }

                    /// <summary>Creates an answer or updates the existing answer written by the user for the specified
                    /// question. A user can only create one answer per question.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">The name of the question to write an answer for.</param>
                    public virtual UpsertRequest Upsert(Google.Apis.MyBusiness.v4.Data.UpsertAnswerRequest body, string parent)
                    {
                        return new UpsertRequest(service, body, parent);
                    }

                    /// <summary>Creates an answer or updates the existing answer written by the user for the specified
                    /// question. A user can only create one answer per question.</summary>
                    public class UpsertRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Answer>
                    {
                        /// <summary>Constructs a new Upsert request.</summary>
                        public UpsertRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.UpsertAnswerRequest body, string parent)
                            : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }


                        /// <summary>The name of the question to write an answer for.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }


                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.MyBusiness.v4.Data.UpsertAnswerRequest Body { get; set; }

                        ///<summary>Returns the body of the request.</summary>
                        protected override object GetBody() { return Body; }

                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "upsert"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "POST"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v4/{+parent}/answers:upsert"; }
                        }

                        /// <summary>Initializes Upsert parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^accounts/[^/]+/locations/[^/]+/questions/[^/]+$",
                                });
                        }

                    }
                }

                /// <summary>Adds a question for the specified location.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The name of the location to write a question for.</param>
                public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.Question body, string parent)
                {
                    return new CreateRequest(service, body, parent);
                }

                /// <summary>Adds a question for the specified location.</summary>
                public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Question>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Question body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The name of the location to write a question for.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.Question Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/questions"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                    }

                }

                /// <summary>Deletes a specific question written by the current user.</summary>
                /// <param name="name">The name of the question to delete.</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Deletes a specific question written by the current user.</summary>
                public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the question to delete.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/questions/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns the paginated list of questions and some of its answers for a specified
                /// location.</summary>
                /// <param name="parent">The name of the location to fetch questions for.</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>Returns the paginated list of questions and some of its answers for a specified
                /// location.</summary>
                public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListQuestionsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>The name of the location to fetch questions for.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>The order to return the questions. Valid options include 'update_time desc' and
                    /// 'upvote_count desc', which will return the questions sorted descendingly by the requested field.
                    /// The default sort order is 'update_time desc'.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string OrderBy { get; set; }

                    /// <summary>How many questions to fetch per page. The default and maximum `page_size` values are
                    /// 10.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>A filter constraining the questions to return. The only filter currently supported is
                    /// "ignore_answered=true"</summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>If specified, the next page of questions is retrieved.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>How many answers to fetch per question. The default and maximum `answers_per_question`
                    /// values are 10.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("answersPerQuestion", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> AnswersPerQuestion { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/questions"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "orderBy", new Google.Apis.Discovery.Parameter
                            {
                                Name = "orderBy",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "answersPerQuestion", new Google.Apis.Discovery.Parameter
                            {
                                Name = "answersPerQuestion",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Updates a specific question written by the current user.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">The name of the question to update.</param>
                public virtual PatchRequest Patch(Google.Apis.MyBusiness.v4.Data.Question body, string name)
                {
                    return new PatchRequest(service, body, name);
                }

                /// <summary>Updates a specific question written by the current user.</summary>
                public class PatchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Question>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Question body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The name of the question to update.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.Question Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "patch"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PATCH"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/questions/[^/]+$",
                            });
                    }

                }
            }
            private readonly ReviewsResource reviews;

            /// <summary>Gets the Reviews resource.</summary>
            public virtual ReviewsResource Reviews
            {
                get { return reviews; }
            }

            /// <summary>The "reviews" collection of methods.</summary>
            public class ReviewsResource
            {
                private const string Resource = "reviews";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ReviewsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Deletes the response to the specified review. This operation is only valid if the specified
                /// location is verified.</summary>
                /// <param name="name">The name of the review reply to delete.</param>
                public virtual DeleteReplyRequest DeleteReply(string name)
                {
                    return new DeleteReplyRequest(service, name);
                }

                /// <summary>Deletes the response to the specified review. This operation is only valid if the specified
                /// location is verified.</summary>
                public class DeleteReplyRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
                {
                    /// <summary>Constructs a new DeleteReply request.</summary>
                    public DeleteReplyRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the review reply to delete.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "deleteReply"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}/reply"; }
                    }

                    /// <summary>Initializes DeleteReply parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/reviews/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns the specified review. This operation is only valid if the specified location is
                /// verified. Returns `NOT_FOUND` if the review does not exist, or has been deleted.</summary>
                /// <param name="name">The name of the review to fetch.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(service, name);
                }

                /// <summary>Returns the specified review. This operation is only valid if the specified location is
                /// verified. Returns `NOT_FOUND` if the review does not exist, or has been deleted.</summary>
                public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Review>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the review to fetch.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/reviews/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns the paginated list of reviews for the specified location. This operation is only
                /// valid if the specified location is verified.</summary>
                /// <param name="parent">The name of the location to fetch reviews for.</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>Returns the paginated list of reviews for the specified location. This operation is only
                /// valid if the specified location is verified.</summary>
                public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListReviewsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>The name of the location to fetch reviews for.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Specifies the field to sort reviews by. If unspecified, the order of reviews returned
                    /// will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and
                    /// `update_time desc`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string OrderBy { get; set; }

                    /// <summary>If specified, it fetches the next page of reviews.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>How many reviews to fetch per page. The maximum `page_size` is 200.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/reviews"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "orderBy", new Google.Apis.Discovery.Parameter
                            {
                                Name = "orderBy",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Updates the reply to the specified review. A reply is created if one does not exist. This
                /// operation is only valid if the specified location is verified.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">The name of the review to respond to.</param>
                public virtual UpdateReplyRequest UpdateReply(Google.Apis.MyBusiness.v4.Data.ReviewReply body, string name)
                {
                    return new UpdateReplyRequest(service, body, name);
                }

                /// <summary>Updates the reply to the specified review. A reply is created if one does not exist. This
                /// operation is only valid if the specified location is verified.</summary>
                public class UpdateReplyRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ReviewReply>
                {
                    /// <summary>Constructs a new UpdateReply request.</summary>
                    public UpdateReplyRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.ReviewReply body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The name of the review to respond to.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.ReviewReply Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "updateReply"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PUT"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}/reply"; }
                    }

                    /// <summary>Initializes UpdateReply parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/reviews/[^/]+$",
                            });
                    }

                }
            }
            private readonly VerificationsResource verifications;

            /// <summary>Gets the Verifications resource.</summary>
            public virtual VerificationsResource Verifications
            {
                get { return verifications; }
            }

            /// <summary>The "verifications" collection of methods.</summary>
            public class VerificationsResource
            {
                private const string Resource = "verifications";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public VerificationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Completes a `PENDING` verification.
                ///
                /// It is only necessary for non `AUTO` verification methods. `AUTO` verification request is instantly
                /// `VERIFIED` upon creation.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">Resource name of the verification to complete.</param>
                public virtual CompleteRequest Complete(Google.Apis.MyBusiness.v4.Data.CompleteVerificationRequest body, string name)
                {
                    return new CompleteRequest(service, body, name);
                }

                /// <summary>Completes a `PENDING` verification.
                ///
                /// It is only necessary for non `AUTO` verification methods. `AUTO` verification request is instantly
                /// `VERIFIED` upon creation.</summary>
                public class CompleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.CompleteVerificationResponse>
                {
                    /// <summary>Constructs a new Complete request.</summary>
                    public CompleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.CompleteVerificationRequest body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Resource name of the verification to complete.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.MyBusiness.v4.Data.CompleteVerificationRequest Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "complete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+name}:complete"; }
                    }

                    /// <summary>Initializes Complete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+/verifications/[^/]+$",
                            });
                    }

                }

                /// <summary>List verifications of a location, ordered by create time.</summary>
                /// <param name="parent">Resource name of the location that verification requests belong to.</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>List verifications of a location, ordered by create time.</summary>
                public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListVerificationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>Resource name of the location that verification requests belong to.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>If specified, returns the next page of verifications.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>How many verification to include per page. If not set, return all.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v4/{+parent}/verifications"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }

            /// <summary>Associates a location to a place ID. Any previous association is overwritten. This operation is
            /// only valid if the location is unverified. The association must be valid, that is, it appears in the list
            /// of `FindMatchingLocations`.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the location to associate.</param>
            public virtual AssociateRequest Associate(Google.Apis.MyBusiness.v4.Data.AssociateLocationRequest body, string name)
            {
                return new AssociateRequest(service, body, name);
            }

            /// <summary>Associates a location to a place ID. Any previous association is overwritten. This operation is
            /// only valid if the location is unverified. The association must be valid, that is, it appears in the list
            /// of `FindMatchingLocations`.</summary>
            public class AssociateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
            {
                /// <summary>Constructs a new Associate request.</summary>
                public AssociateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.AssociateLocationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the location to associate.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.AssociateLocationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "associate"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:associate"; }
                }

                /// <summary>Initializes Associate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Gets all of the specified locations in the given account.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the account from which to fetch locations.</param>
            public virtual BatchGetRequest BatchGet(Google.Apis.MyBusiness.v4.Data.BatchGetLocationsRequest body, string name)
            {
                return new BatchGetRequest(service, body, name);
            }

            /// <summary>Gets all of the specified locations in the given account.</summary>
            public class BatchGetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.BatchGetLocationsResponse>
            {
                /// <summary>Constructs a new BatchGet request.</summary>
                public BatchGetRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.BatchGetLocationsRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the account from which to fetch locations.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.BatchGetLocationsRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchGet"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}/locations:batchGet"; }
                }

                /// <summary>Initializes BatchGet parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                }

            }

            /// <summary>Returns the paginated list of reviews for all specified locations. This operation is only valid
            /// if the specified locations are verified. Note: Reviews are limited to a batch size of 200
            /// `location_names` per call.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the account from which to retrieve a list of reviews across multiple
            /// locations.</param>
            public virtual BatchGetReviewsRequest BatchGetReviews(Google.Apis.MyBusiness.v4.Data.BatchGetReviewsRequest body, string name)
            {
                return new BatchGetReviewsRequest(service, body, name);
            }

            /// <summary>Returns the paginated list of reviews for all specified locations. This operation is only valid
            /// if the specified locations are verified. Note: Reviews are limited to a batch size of 200
            /// `location_names` per call.</summary>
            public class BatchGetReviewsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.BatchGetReviewsResponse>
            {
                /// <summary>Constructs a new BatchGetReviews request.</summary>
                public BatchGetReviewsRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.BatchGetReviewsRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the account from which to retrieve a list of reviews across multiple
                /// locations.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.BatchGetReviewsRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchGetReviews"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}/locations:batchGetReviews"; }
                }

                /// <summary>Initializes BatchGetReviews parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                }

            }

            /// <summary>Clears an association between a location and its place ID. This operation is only valid if the
            /// location is unverified.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the location to disassociate.</param>
            public virtual ClearAssociationRequest ClearAssociation(Google.Apis.MyBusiness.v4.Data.ClearLocationAssociationRequest body, string name)
            {
                return new ClearAssociationRequest(service, body, name);
            }

            /// <summary>Clears an association between a location and its place ID. This operation is only valid if the
            /// location is unverified.</summary>
            public class ClearAssociationRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
            {
                /// <summary>Constructs a new ClearAssociation request.</summary>
                public ClearAssociationRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.ClearLocationAssociationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the location to disassociate.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.ClearLocationAssociationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "clearAssociation"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:clearAssociation"; }
                }

                /// <summary>Initializes ClearAssociation parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Creates a new location owned by the specified account, and returns it.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The name of the account in which to create this location.</param>
            public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.Location body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Creates a new location owned by the specified account, and returns it.</summary>
            public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Location>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Location body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the account in which to create this location.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>If true, the request is validated without actually creating the location.</summary>
                [Google.Apis.Util.RequestParameterAttribute("validateOnly", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> ValidateOnly { get; set; }

                /// <summary>A unique request ID for the server to detect duplicated requests. We recommend using UUIDs.
                /// Max length is 50 characters.</summary>
                [Google.Apis.Util.RequestParameterAttribute("requestId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string RequestId { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.Location Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+parent}/locations"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                    RequestParameters.Add(
                        "validateOnly", new Google.Apis.Discovery.Parameter
                        {
                            Name = "validateOnly",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "requestId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "requestId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Deletes a location.
            ///
            /// Note: If this location cannot be deleted using the API as marked in the LocationState, use the [Google
            /// My Business](https://business.google.com/manage/) website.
            ///
            /// Returns `NOT_FOUND` if the location does not exist.</summary>
            /// <param name="name">The name of the location to delete.</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Deletes a location.
            ///
            /// Note: If this location cannot be deleted using the API as marked in the LocationState, use the [Google
            /// My Business](https://business.google.com/manage/) website.
            ///
            /// Returns `NOT_FOUND` if the location does not exist.</summary>
            public class DeleteRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the location to delete.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Reports all eligible verification options for a location in a specific language.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Resource name of the location to verify.</param>
            public virtual FetchVerificationOptionsRequest FetchVerificationOptions(Google.Apis.MyBusiness.v4.Data.FetchVerificationOptionsRequest body, string name)
            {
                return new FetchVerificationOptionsRequest(service, body, name);
            }

            /// <summary>Reports all eligible verification options for a location in a specific language.</summary>
            public class FetchVerificationOptionsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.FetchVerificationOptionsResponse>
            {
                /// <summary>Constructs a new FetchVerificationOptions request.</summary>
                public FetchVerificationOptionsRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.FetchVerificationOptionsRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Resource name of the location to verify.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.FetchVerificationOptionsRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "fetchVerificationOptions"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:fetchVerificationOptions"; }
                }

                /// <summary>Initializes FetchVerificationOptions parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Finds all of the possible locations that are a match to the specified location. This operation
            /// is only valid if the location is unverified.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the location to find matches for.</param>
            public virtual FindMatchesRequest FindMatches(Google.Apis.MyBusiness.v4.Data.FindMatchingLocationsRequest body, string name)
            {
                return new FindMatchesRequest(service, body, name);
            }

            /// <summary>Finds all of the possible locations that are a match to the specified location. This operation
            /// is only valid if the location is unverified.</summary>
            public class FindMatchesRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.FindMatchingLocationsResponse>
            {
                /// <summary>Constructs a new FindMatches request.</summary>
                public FindMatchesRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.FindMatchingLocationsRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the location to find matches for.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.FindMatchingLocationsRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "findMatches"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:findMatches"; }
                }

                /// <summary>Initializes FindMatches parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the specified location. Returns `NOT_FOUND` if the location does not exist.</summary>
            /// <param name="name">The name of the location to fetch.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the specified location. Returns `NOT_FOUND` if the location does not exist.</summary>
            public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Location>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the location to fetch.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the Google-updated version of the specified location. Returns `NOT_FOUND` if the location
            /// does not exist.</summary>
            /// <param name="name">The name of the location to fetch.</param>
            public virtual GetGoogleUpdatedRequest GetGoogleUpdated(string name)
            {
                return new GetGoogleUpdatedRequest(service, name);
            }

            /// <summary>Gets the Google-updated version of the specified location. Returns `NOT_FOUND` if the location
            /// does not exist.</summary>
            public class GetGoogleUpdatedRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.GoogleUpdatedLocation>
            {
                /// <summary>Constructs a new GetGoogleUpdated request.</summary>
                public GetGoogleUpdatedRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the location to fetch.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "getGoogleUpdated"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:googleUpdated"; }
                }

                /// <summary>Initializes GetGoogleUpdated parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Lists the locations for the specified account.</summary>
            /// <param name="parent">The name of the account to fetch locations from. If the Account is of AccountType PERSONAL,
            /// only Locations that are directly owned by the Account are returned, otherwise it will return all accessible
            /// locations from the Account, either directly or indirectly.</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists the locations for the specified account.</summary>
            public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListLocationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The name of the account to fetch locations from. If the Account is of AccountType PERSONAL,
                /// only Locations that are directly owned by the Account are returned, otherwise it will return all
                /// accessible locations from the Account, either directly or indirectly.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Sorting order for the request. Multiple fields should be comma-separated, following SQL
                /// syntax. The default sorting order is ascending. To specify descending order, a suffix " desc" should
                /// be added. Valid fields to order_by are location_name and store_code. For example: "location_name,
                /// store_code desc" or "location_name" or "store_code desc"</summary>
                [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string OrderBy { get; set; }

                /// <summary>The BCP 47 code of language to get display location properties in. If this language is not
                /// available, they will be provided in the language of the location. If neither is available, they will
                /// be provided in English.</summary>
                [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string LanguageCode { get; set; }

                /// <summary>How many locations to fetch per page. Default is 100, minimum is 1, and maximum page size
                /// is 100.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>A filter constraining the locations to return. The response includes only entries that
                /// match the filter. If `filter` is empty, then constraints are applied and all locations (paginated)
                /// are retrieved for the requested account.
                ///
                /// For more information about valid fields and example usage, see [Work with Location Data
                /// Guide](https://developers.google.com/my-business/content/location-
                /// data#filter_results_when_listing_locations).</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>If specified, it fetches the next `page` of locations. The page token is returned by
                /// previous calls to `ListLocations` when there were more locations than could fit in the requested
                /// page size.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+parent}/locations"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                    RequestParameters.Add(
                        "orderBy", new Google.Apis.Discovery.Parameter
                        {
                            Name = "orderBy",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the specified location.
            ///
            /// Photos are only allowed on a location that has a Google+ page.
            ///
            /// Returns `NOT_FOUND` if the location does not exist.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the location to update.</param>
            public virtual PatchRequest Patch(Google.Apis.MyBusiness.v4.Data.Location body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates the specified location.
            ///
            /// Photos are only allowed on a location that has a Google+ page.
            ///
            /// Returns `NOT_FOUND` if the location does not exist.</summary>
            public class PatchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Location>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Location body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the location to update.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>If true, the request is validated without actually updating the location.</summary>
                [Google.Apis.Util.RequestParameterAttribute("validateOnly", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> ValidateOnly { get; set; }

                /// <summary>The IDs of the attributes to update. Only attributes noted in the mask will be updated. If
                /// an attribute is present in the mask and not in the location, it will be removed. An empty mask will
                /// update all attributes.
                ///
                /// Whenever this field is set, the update_mask should include attributes as one of the fields to
                /// update.</summary>
                [Google.Apis.Util.RequestParameterAttribute("attributeMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object AttributeMask { get; set; }

                /// <summary>The specific fields to update. If no mask is specified, then this is treated as a full
                /// update and all fields are set to the values passed in, which may include unsetting empty fields in
                /// the request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.Location Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                    RequestParameters.Add(
                        "validateOnly", new Google.Apis.Discovery.Parameter
                        {
                            Name = "validateOnly",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "attributeMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "attributeMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Returns a report containing insights on one or more metrics by location.
            ///
            /// Note: Insight reports are limited to a batch size of 10 `location_names` per call.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The account resource name.</param>
            public virtual ReportInsightsRequest ReportInsights(Google.Apis.MyBusiness.v4.Data.ReportLocationInsightsRequest body, string name)
            {
                return new ReportInsightsRequest(service, body, name);
            }

            /// <summary>Returns a report containing insights on one or more metrics by location.
            ///
            /// Note: Insight reports are limited to a batch size of 10 `location_names` per call.</summary>
            public class ReportInsightsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ReportLocationInsightsResponse>
            {
                /// <summary>Constructs a new ReportInsights request.</summary>
                public ReportInsightsRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.ReportLocationInsightsRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The account resource name.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.ReportLocationInsightsRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "reportInsights"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}/locations:reportInsights"; }
                }

                /// <summary>Initializes ReportInsights parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+$",
                        });
                }

            }

            /// <summary>Moves a location from an account that the user owns to another account that the same user
            /// administers. The user must be an owner of the account the location is currently associated with and must
            /// also be at least a manager of the destination account. Returns the Location with its new resource
            /// name.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the location to transfer.</param>
            public virtual TransferRequest Transfer(Google.Apis.MyBusiness.v4.Data.TransferLocationRequest body, string name)
            {
                return new TransferRequest(service, body, name);
            }

            /// <summary>Moves a location from an account that the user owns to another account that the same user
            /// administers. The user must be an owner of the account the location is currently associated with and must
            /// also be at least a manager of the destination account. Returns the Location with its new resource
            /// name.</summary>
            public class TransferRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Location>
            {
                /// <summary>Constructs a new Transfer request.</summary>
                public TransferRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.TransferLocationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the location to transfer.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.TransferLocationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "transfer"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:transfer"; }
                }

                /// <summary>Initializes Transfer parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }

            /// <summary>Starts the verification process for a location.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Resource name of the location to verify.</param>
            public virtual VerifyRequest Verify(Google.Apis.MyBusiness.v4.Data.VerifyLocationRequest body, string name)
            {
                return new VerifyRequest(service, body, name);
            }

            /// <summary>Starts the verification process for a location.</summary>
            public class VerifyRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.VerifyLocationResponse>
            {
                /// <summary>Constructs a new Verify request.</summary>
                public VerifyRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.VerifyLocationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Resource name of the location to verify.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MyBusiness.v4.Data.VerifyLocationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "verify"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v4/{+name}:verify"; }
                }

                /// <summary>Initializes Verify parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^accounts/[^/]+/locations/[^/]+$",
                        });
                }

            }
        }

        /// <summary>Creates an account with the specified name and type under the given parent.
        ///
        /// Personal accounts and Organizations cannot be created. User Groups cannot be created with a Personal account
        /// as primary owner. Location Groups cannot be created with a primary owner of a Personal account if the
        /// Personal account is in an Organization. Location Groups cannot own Location Groups. </summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.MyBusiness.v4.Data.Account body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Creates an account with the specified name and type under the given parent.
        ///
        /// Personal accounts and Organizations cannot be created. User Groups cannot be created with a Personal account
        /// as primary owner. Location Groups cannot be created with a primary owner of a Personal account if the
        /// Personal account is in an Organization. Location Groups cannot own Location Groups. </summary>
        public class CreateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Account>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Account body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }


            /// <summary>The resource name of the account which will be the primary owner of the account being created.
            /// It should be of the form `accounts/{account_id}/`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("primaryOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PrimaryOwner { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MyBusiness.v4.Data.Account Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/accounts"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "primaryOwner", new Google.Apis.Discovery.Parameter
                    {
                        Name = "primaryOwner",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Clears the pubsub notification settings for the account.</summary>
        /// <param name="name">The resource name for the notification settings to be cleared.</param>
        public virtual DeleteNotificationsRequest DeleteNotifications(string name)
        {
            return new DeleteNotificationsRequest(service, name);
        }

        /// <summary>Clears the pubsub notification settings for the account.</summary>
        public class DeleteNotificationsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
        {
            /// <summary>Constructs a new DeleteNotifications request.</summary>
            public DeleteNotificationsRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The resource name for the notification settings to be cleared.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deleteNotifications"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}"; }
            }

            /// <summary>Initializes DeleteNotifications parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+/notifications$",
                    });
            }

        }

        /// <summary>Generates an account number for this account. The account number is not provisioned when an account
        /// is created. Use this request to create an account number when it is required.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">The name of the account to generate an account number for.</param>
        public virtual GenerateAccountNumberRequest GenerateAccountNumber(Google.Apis.MyBusiness.v4.Data.GenerateAccountNumberRequest body, string name)
        {
            return new GenerateAccountNumberRequest(service, body, name);
        }

        /// <summary>Generates an account number for this account. The account number is not provisioned when an account
        /// is created. Use this request to create an account number when it is required.</summary>
        public class GenerateAccountNumberRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Account>
        {
            /// <summary>Constructs a new GenerateAccountNumber request.</summary>
            public GenerateAccountNumberRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.GenerateAccountNumberRequest body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>The name of the account to generate an account number for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MyBusiness.v4.Data.GenerateAccountNumberRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "generateAccountNumber"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}:generateAccountNumber"; }
            }

            /// <summary>Initializes GenerateAccountNumber parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+$",
                    });
            }

        }

        /// <summary>Gets the specified account. Returns `NOT_FOUND` if the account does not exist or if the caller does
        /// not have access rights to it.</summary>
        /// <param name="name">The name of the account to fetch.</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets the specified account. Returns `NOT_FOUND` if the account does not exist or if the caller does
        /// not have access rights to it.</summary>
        public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Account>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The name of the account to fetch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+$",
                    });
            }

        }

        /// <summary>Returns the pubsub notification settings for the account.</summary>
        /// <param name="name">The notification settings resource name.</param>
        public virtual GetNotificationsRequest GetNotifications(string name)
        {
            return new GetNotificationsRequest(service, name);
        }

        /// <summary>Returns the pubsub notification settings for the account.</summary>
        public class GetNotificationsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Notifications>
        {
            /// <summary>Constructs a new GetNotifications request.</summary>
            public GetNotificationsRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The notification settings resource name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getNotifications"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}"; }
            }

            /// <summary>Initializes GetNotifications parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+/notifications$",
                    });
            }

        }

        /// <summary>Lists all of the accounts for the authenticated user. This includes all accounts that the user
        /// owns, as well as any accounts for which the user has management rights.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists all of the accounts for the authenticated user. This includes all accounts that the user
        /// owns, as well as any accounts for which the user has management rights.</summary>
        public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListAccountsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>A filter constraining the accounts to return. The response includes only entries that match the
            /// filter. If `filter` is empty, then no constraints are applied and all accounts (paginated) are retrieved
            /// for the requested account.
            ///
            /// For example, a request with the filter `type=USER_GROUP` will only return user groups.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>If specified, the next page of accounts is retrieved. The `pageToken` is returned when a call
            /// to `accounts.list` returns more results than can fit into the requested page size.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The resource name of the account for which the list of directly accessible accounts is to be
            /// retrieved. This only makes sense for Organizations and User Groups. If empty, will return `ListAccounts`
            /// for the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>How many accounts to fetch per page. Default is 20, minimum is 2, and maximum page size is
            /// 20.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/accounts"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>List all the GoogleLocations that have been recommended to the specified GMB account.
        /// Recommendations are provided for personal accounts and location groups only, requests for all other account
        /// types will result in an error. The recommendations for location groups are based on the locations in that
        /// group.
        ///
        /// The recommendations for personal accounts are based on all of the locations that the user has access to on
        /// Google My Business (which includes locations they can access through location groups), and is a superset of
        /// all recommendations generated for the user.</summary>
        /// <param name="name">Name of the account resource to fetch recommended Google locations for.</param>
        public virtual ListRecommendGoogleLocationsRequest ListRecommendGoogleLocations(string name)
        {
            return new ListRecommendGoogleLocationsRequest(service, name);
        }

        /// <summary>List all the GoogleLocations that have been recommended to the specified GMB account.
        /// Recommendations are provided for personal accounts and location groups only, requests for all other account
        /// types will result in an error. The recommendations for location groups are based on the locations in that
        /// group.
        ///
        /// The recommendations for personal accounts are based on all of the locations that the user has access to on
        /// Google My Business (which includes locations they can access through location groups), and is a superset of
        /// all recommendations generated for the user.</summary>
        public class ListRecommendGoogleLocationsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListRecommendedGoogleLocationsResponse>
        {
            /// <summary>Constructs a new ListRecommendGoogleLocations request.</summary>
            public ListRecommendGoogleLocationsRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Name of the account resource to fetch recommended Google locations for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>If specified, the next page of locations is retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>How many locations to fetch per page. Default is 25, minimum is 1, and maximum page size is
            /// 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listRecommendGoogleLocations"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}:recommendGoogleLocations"; }
            }

            /// <summary>Initializes ListRecommendGoogleLocations parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+$",
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the specified business account. Personal accounts cannot be updated using this method.
        /// Note: The only editable field for an account is `account_name`. Any other fields passed in (such as `type`
        /// or `role`) are ignored.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">The name of the account to update.</param>
        public virtual UpdateRequest Update(Google.Apis.MyBusiness.v4.Data.Account body, string name)
        {
            return new UpdateRequest(service, body, name);
        }

        /// <summary>Updates the specified business account. Personal accounts cannot be updated using this method.
        /// Note: The only editable field for an account is `account_name`. Any other fields passed in (such as `type`
        /// or `role`) are ignored.</summary>
        public class UpdateRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Account>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Account body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>The name of the account to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>If true, the request is validated without actually updating the account.</summary>
            [Google.Apis.Util.RequestParameterAttribute("validateOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ValidateOnly { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MyBusiness.v4.Data.Account Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+$",
                    });
                RequestParameters.Add(
                    "validateOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "validateOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Sets the pubsub notification settings for the account informing My Business which topic to send
        /// pubsub notifications for:
        ///
        /// - New reviews for locations administered by the account. - Updated reviews for locations administered by the
        /// account. - New `GoogleUpdates` for locations administered by the account.
        ///
        /// An account will only have one notification settings resource, and only one pubsub topic can be
        /// set.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">The notification settings resource name.</param>
        public virtual UpdateNotificationsRequest UpdateNotifications(Google.Apis.MyBusiness.v4.Data.Notifications body, string name)
        {
            return new UpdateNotificationsRequest(service, body, name);
        }

        /// <summary>Sets the pubsub notification settings for the account informing My Business which topic to send
        /// pubsub notifications for:
        ///
        /// - New reviews for locations administered by the account. - Updated reviews for locations administered by the
        /// account. - New `GoogleUpdates` for locations administered by the account.
        ///
        /// An account will only have one notification settings resource, and only one pubsub topic can be
        /// set.</summary>
        public class UpdateNotificationsRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Notifications>
        {
            /// <summary>Constructs a new UpdateNotifications request.</summary>
            public UpdateNotificationsRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.Notifications body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>The notification settings resource name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MyBusiness.v4.Data.Notifications Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "updateNotifications"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}"; }
            }

            /// <summary>Initializes UpdateNotifications parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^accounts/[^/]+/notifications$",
                    });
            }

        }
    }

    /// <summary>The "attributes" collection of methods.</summary>
    public class AttributesResource
    {
        private const string Resource = "attributes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AttributesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the list of available attributes that would be available for a location with the given
        /// primary category and country.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Returns the list of available attributes that would be available for a location with the given
        /// primary category and country.</summary>
        public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListAttributeMetadataResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>The BCP 47 code of language to get attribute display names in. If this language is not
            /// available, they will be provided in English.</summary>
            [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string LanguageCode { get; set; }

            /// <summary>Resource name of the location to look up available attributes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>How many attributes to include per page. Default is 200, minimum is 1.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>The ISO 3166-1 alpha-2 country code to find available attributes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("country", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Country { get; set; }

            /// <summary>If specified, the next page of attribute metadata is retrieved. The `pageToken` is returned
            /// when a call to `attributes.list` returns more results than can fit into the requested page
            /// size.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The primary category stable ID to find available attributes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("categoryId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CategoryId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/attributes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "languageCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "languageCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "country", new Google.Apis.Discovery.Parameter
                    {
                        Name = "country",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "categoryId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "categoryId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "categories" collection of methods.</summary>
    public class CategoriesResource
    {
        private const string Resource = "categories";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CategoriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns a list of business categories. Search will match the category name but not the category ID.
        ///
        /// Note: Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not
        /// 'Fast Food Restaurant').</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Returns a list of business categories. Search will match the category name but not the category ID.
        ///
        /// Note: Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not
        /// 'Fast Food Restaurant').</summary>
        public class ListRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.ListBusinessCategoriesResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Optional filter string from user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchTerm", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchTerm { get; set; }

            /// <summary>The ISO 3166-1 alpha-2 country code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode { get; set; }

            /// <summary>If specified, the next page of categories will be fetched.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>How many categories to fetch per page. Default is 100, minimum is 1, and maximum page size is
            /// 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>The BCP 47 code of language. If the language is not available, it will default to
            /// English.</summary>
            [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string LanguageCode { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/categories"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "searchTerm", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchTerm",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "regionCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "regionCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "languageCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "languageCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "chains" collection of methods.</summary>
    public class ChainsResource
    {
        private const string Resource = "chains";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ChainsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.</summary>
        /// <param name="name">The chain's resource name, in the format `chains/{chain_place_id}`.</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.</summary>
        public class GetRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Chain>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The chain's resource name, in the format `chains/{chain_place_id}`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^chains/[^/]+$",
                    });
            }

        }

        /// <summary>Searches the chain based on chain name.</summary>
        public virtual SearchRequest Search()
        {
            return new SearchRequest(service);
        }

        /// <summary>Searches the chain based on chain name.</summary>
        public class SearchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.SearchChainsResponse>
        {
            /// <summary>Constructs a new Search request.</summary>
            public SearchRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>The maximum number of matched chains to return from this query. The default is 10. The maximum
            /// possible value is 500.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resultCount", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> ResultCount { get; set; }

            /// <summary>Search for a chain by its name. Exact/partial/fuzzy/related queries are supported. Examples:
            /// "walmart", "wal-mart", "walmmmart", "沃尔玛"</summary>
            [Google.Apis.Util.RequestParameterAttribute("chainDisplayName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChainDisplayName { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "search"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/chains:search"; }
            }

            /// <summary>Initializes Search parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resultCount", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resultCount",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "chainDisplayName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "chainDisplayName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "googleLocations" collection of methods.</summary>
    public class GoogleLocationsResource
    {
        private const string Resource = "googleLocations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GoogleLocationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Report a GoogleLocation.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">Resource name of a [GoogleLocation], in the format
        /// `googleLocations/{googleLocationId}`.</param>
        public virtual ReportRequest Report(Google.Apis.MyBusiness.v4.Data.ReportGoogleLocationRequest body, string name)
        {
            return new ReportRequest(service, body, name);
        }

        /// <summary>Report a GoogleLocation.</summary>
        public class ReportRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.Empty>
        {
            /// <summary>Constructs a new Report request.</summary>
            public ReportRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.ReportGoogleLocationRequest body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>Resource name of a [GoogleLocation], in the format
            /// `googleLocations/{googleLocationId}`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MyBusiness.v4.Data.ReportGoogleLocationRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "report"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/{+name}:report"; }
            }

            /// <summary>Initializes Report parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^googleLocations/[^/]+$",
                    });
            }

        }

        /// <summary>Search all of the possible locations that are a match to the specified request.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual SearchRequest Search(Google.Apis.MyBusiness.v4.Data.SearchGoogleLocationsRequest body)
        {
            return new SearchRequest(service, body);
        }

        /// <summary>Search all of the possible locations that are a match to the specified request.</summary>
        public class SearchRequest : MyBusinessBaseServiceRequest<Google.Apis.MyBusiness.v4.Data.SearchGoogleLocationsResponse>
        {
            /// <summary>Constructs a new Search request.</summary>
            public SearchRequest(Google.Apis.Services.IClientService service, Google.Apis.MyBusiness.v4.Data.SearchGoogleLocationsRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MyBusiness.v4.Data.SearchGoogleLocationsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "search"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v4/googleLocations:search"; }
            }

            /// <summary>Initializes Search parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }
}
